#include "types.h"
#include "DUN_VectorMath.h"

dontmangle float sqrt(float);
dontmangle float cosf(float);
dontmangle float sinf(float);

float MATHS_VectorMagnitude(Vec3F *v) {
    return sqrt(v->x * v->x + v->y * v->y + v->z * v->z);
}

extern float lbl_800EEB78;
void MATHS_VectorNormalise(Vec3F *v) {
	float m = MATHS_VectorMagnitude(v);

	// if (m != 0.0)
	if (m != lbl_800EEB78) {
		v->x = v->x / m;
		v->y = v->y / m;
		v->z = v->z / m;
	}
}

extern float lbl_800EEB7C;
#if 0
dontmangle void func_80003858(Vec3F *v) {
	float v1 = MATHS_VectorMagnitude(v);
	if (v1 != lbl_800EEB7C) {
		v->x /= v1;
		v->y /= v1;
		v->z /= v1;
	}
}
#else
dontmangle __ASM void func_80003858() {
	asm volatile(
		"stwu 1, -0x10(1)\t\n"
		"mflr 0\t\n"
		"stw 31, 0xc(1)\t\n"
		"stw 0, 0x14(1)\t\n"
		"mr 31, 3\t\n"
		"bl MATHS_VectorMagnitude__FP5Vec3F\t\n"
		"fmr 11, 1\t\n"
		"lis 9, lbl_800EEB7C@ha\t\n"
		"lfs 1, lbl_800EEB7C@l(9)\t\n"
		"fcmpu 0, 11, 1\t\n"
		"beq lbl_800038AC\t\n"
		"lfs 0, 0(31)\t\n"
		"fmr 1, 11\t\n"
		"lfs 13, 4(31)\t\n"
		"lfs 12, 8(31)\t\n"
		"fdivs 0, 0, 11\t\n"
		"fdivs 13, 13, 11\t\n"
		"stfs 0, 0(31)\t\n"
		"fdivs 12, 12, 11\t\n"
		"stfs 13, 4(31)\t\n"
		"stfs 12, 8(31)\t\n"
		"lbl_800038AC:\t\n"
		"lwz 0, 0x14(1)\t\n"
		"mtlr 0\t\n"
		"lwz 31, 0xc(1)\t\n"
		"addi 1, 1, 0x10\t\n"
	);
}
#endif

void MATHS_VectorCrossProduct(Vec3F *a1, Vec3F *a2, Vec3F *a3) { 
	a1->x = a2->y * a3->z - a2->z * a3->y;
	a1->y = a2->z * a3->x - a2->x * a3->z;
	a1->z = a2->x * a3->y - a2->y * a3->x;
}

#if 0
void MATHS_VectorTransform(Vec3F *, PSR_MATRIX *, Vec3F *) {

}
#else
dontmangle __ASM void MATHS_VectorTransform__FP5Vec3FP10PSR_MATRIXT0() {
	asm volatile(
		"lfs 11, 0x10(4)\t\n"
		"lis 9, lbl_800EEB80@ha\t\n"
		"lfs 12, 4(5)\t\n"
		"lfs 9, 0(4)\t\n"
		"lfs 13, 0(5)\t\n"
		"fmuls 12, 12, 11\t\n"
		"lfs 11, 0x20(4)\t\n"
		"lfs 0, 8(5)\t\n"
		"fmadds 13, 13, 9, 12\t\n"
		"lfs 10, 0x30(4)\t\n"
		"fmadds 0, 0, 11, 13\t\n"
		"lfs 8, lbl_800EEB80@l(9)\t\n"
		"fadds 5, 0, 10\t\n"
		"stfs 5, 0(3)\t\n"
		"lfs 11, 0x14(4)\t\n"
		"lfs 13, 4(5)\t\n"
		"lfs 9, 4(4)\t\n"
		"lfs 12, 0(5)\t\n"
		"fmuls 13, 13, 11\t\n"
		"lfs 10, 0x24(4)\t\n"
		"lfs 0, 8(5)\t\n"
		"fmadds 12, 12, 9, 13\t\n"
		"lfs 11, 0x34(4)\t\n"
		"fmadds 0, 0, 10, 12\t\n"
		"fadds 6, 0, 11\t\n"
		"stfs 6, 4(3)\t\n"
		"lfs 11, 0x18(4)\t\n"
		"lfs 13, 4(5)\t\n"
		"lfs 9, 8(4)\t\n"
		"lfs 12, 0(5)\t\n"
		"fmuls 13, 13, 11\t\n"
		"lfs 10, 0x28(4)\t\n"
		"lfs 0, 8(5)\t\n"
		"fmadds 12, 12, 9, 13\t\n"
		"lfs 11, 0x38(4)\t\n"
		"fmadds 0, 0, 10, 12\t\n"
		"fadds 7, 0, 11\t\n"
		"stfs 7, 8(3)\t\n"
		"lfs 11, 0x1c(4)\t\n"
		"lfs 13, 4(5)\t\n"
		"lfs 12, 0(5)\t\n"
		"lfs 9, 0xc(4)\t\n"
		"fmuls 13, 13, 11\t\n"
		"lfs 0, 8(5)\t\n"
		"lfs 10, 0x2c(4)\t\n"
		"fmadds 12, 12, 9, 13\t\n"
		"lfs 11, 0x3c(4)\t\n"
		"fmadds 0, 0, 10, 12\t\n"
		"fadds 13, 0, 11\t\n"
		"fcmpu 0, 13, 8\t\n"
		"bclr 12, 2\t\n"
		"lis 9, lbl_800EEB84@ha\t\n"
		"lfs 0, lbl_800EEB84@l(9)\t\n"
		"fdivs 0, 0, 13\t\n"
		"fmuls 13, 7, 0\t\n"
		"fmuls 12, 5, 0\t\n"
		"stfs 13, 8(3)\t\n"
		"fmuls 0, 6, 0\t\n"
		"stfs 12, 0(3)\t\n"
		"stfs 0, 4(3)\t\n"
	);
}
#endif

#if 0
void MATHS_SetMatrixToFace(PSR_MATRIX *, Vec3F *) {

}
#else
dontmangle __ASM void MATHS_SetMatrixToFace__FP10PSR_MATRIXP5Vec3F() {
	asm volatile(
		"stwu 1, -0x50(1)\t\n"
		"mflr 0\t\n"
		"stfd 31, 0x48(1)\t\n"
		"stmw 28, 0x38(1)\t\n"
		"stw 0, 0x54(1)\t\n"
		"mr 29, 4\t\n"
		"mr 30, 3\t\n"
		"lwz 11, 0(29)\t\n"
		"addi 28, 1, 0x28\t\n"
		"lwz 0, 8(29)\t\n"
		"mr 3, 28\t\n"
		"lwz 9, 4(29)\t\n"
		"stw 11, 0x28(1)\t\n"
		"stw 0, 8(28)\t\n"
		"stw 9, 4(28)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lfs 12, 0x28(1)\t\n"
		"lis 9, lbl_800EEB88@ha\t\n"
		"lfs 13, 0x2c(1)\t\n"
		"addi 3, 1, 8\t\n"
		"lfs 0, 0x30(1)\t\n"
		"stfs 12, 0x20(30)\t\n"
		"stfs 13, 0x24(30)\t\n"
		"stfs 0, 0x28(30)\t\n"
		"lfs 31, lbl_800EEB88@l(9)\t\n"
		"lfs 0, 0(29)\t\n"
		"lfs 13, 8(29)\t\n"
		"fneg 0, 0\t\n"
		"stfs 31, 0xc(1)\t\n"
		"stfs 13, 8(1)\t\n"
		"stfs 0, 0x10(1)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lfs 13, 8(1)\t\n"
		"mr 5, 28\t\n"
		"lfs 0, 0x10(1)\t\n"
		"addi 3, 1, 0x18\t\n"
		"stfs 31, 4(30)\t\n"
		"addi 4, 1, 8\t\n"
		"stfs 13, 0(30)\t\n"
		"stfs 0, 8(30)\t\n"
		"bl MATHS_VectorCrossProduct__FP5Vec3FN20\t\n"
		"lfs 0, 0x18(1)\t\n"
		"lfs 13, 0x1c(1)\t\n"
		"lfs 12, 0x20(1)\t\n"
		"fneg 0, 0\t\n"
		"fneg 13, 13\t\n"
		"stfs 0, 0x10(30)\t\n"
		"fneg 12, 12\t\n"
		"stfs 13, 0x14(30)\t\n"
		"stfs 12, 0x18(30)\t\n"
		"lwz 0, 0x54(1)\t\n"
		"mtlr 0\t\n"
		"lmw 28, 0x38(1)\t\n"
		"lfd 31, 0x48(1)\t\n"
		"addi 1, 1, 0x50\t\n"
	);
}
#endif

#if 0
void MATHS_SetMatrixToFace2(PSR_MATRIX *, Vec3F *) {

}
#else
dontmangle __ASM void MATHS_SetMatrixToFace2__FP10PSR_MATRIXP5Vec3F() {
	asm volatile(
		"stwu 1, -0x50(1)\t\n"
		"mflr 0\t\n"
		"stmw 30, 0x48(1)\t\n"
		"stw 0, 0x54(1)\t\n"
		"lwz 11, 0(4)\t\n"
		"addi 9, 1, 0x28\t\n"
		"lwz 10, 8(4)\t\n"
		"mr 31, 3\t\n"
		"lwz 0, 4(4)\t\n"
		"mr 30, 9\t\n"
		"stw 11, 0x28(1)\t\n"
		"mr 3, 9\t\n"
		"stw 0, 4(9)\t\n"
		"stw 10, 8(9)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lis 9, lbl_800EEB8C@ha\t\n"
		"lfs 0, 0x28(1)\t\n"
		"lfs 12, 0x2c(1)\t\n"
		"lfs 13, 0x30(1)\t\n"
		"lfs 11, lbl_800EEB8C@l(9)\t\n"
		"stfs 0, 0x20(31)\t\n"
		"fcmpu 0, 0, 11\t\n"
		"stfs 13, 0x28(31)\t\n"
		"stfs 12, 0x24(31)\t\n"
		"bge lbl_80003B70\t\n"
		"lis 11, lbl_800EEB90@ha\t\n"
		"lis 9, lbl_800EEB94@ha\t\n"
		"lfs 13, lbl_800EEB94@l(9)\t\n"
		"lfs 0, lbl_800EEB90@l(11)\t\n"
		"stfs 13, 0x40(1)\t\n"
		"stfs 0, 0x38(1)\t\n"
		"stfs 13, 0x3c(1)\t\n"
		"b lbl_80003BB0\t\n"
		"lbl_80003B70:\t\n"
		"fcmpu 0, 12, 11\t\n"
		"bge lbl_80003B94\t\n"
		"lis 9, lbl_800EEB94@ha\t\n"
		"lis 11, lbl_800EEB90@ha\t\n"
		"lfs 13, lbl_800EEB94@l(9)\t\n"
		"lfs 0, lbl_800EEB90@l(11)\t\n"
		"stfs 13, 0x40(1)\t\n"
		"stfs 0, 0x3c(1)\t\n"
		"b lbl_80003BAC\t\n"
		"lbl_80003B94:\t\n"
		"lis 9, lbl_800EEB94@ha\t\n"
		"lis 11, lbl_800EEB90@ha\t\n"
		"lfs 13, lbl_800EEB94@l(9)\t\n"
		"lfs 0, lbl_800EEB90@l(11)\t\n"
		"stfs 13, 0x3c(1)\t\n"
		"stfs 0, 0x40(1)\t\n"
		"lbl_80003BAC:\t\n"
		"stfs 13, 0x38(1)\t\n"
		"lbl_80003BB0:\t\n"
		"addi 3, 1, 8\t\n"
		"addi 4, 1, 0x38\t\n"
		"mr 5, 30\t\n"
		"bl MATHS_VectorCrossProduct__FP5Vec3FN20\t\n"
		"lfs 12, 8(1)\t\n"
		"mr 5, 30\t\n"
		"lfs 13, 0xc(1)\t\n"
		"addi 3, 1, 0x18\t\n"
		"lfs 0, 0x10(1)\t\n"
		"addi 4, 1, 8\t\n"
		"stfs 12, 0(31)\t\n"
		"stfs 13, 4(31)\t\n"
		"stfs 0, 8(31)\t\n"
		"bl MATHS_VectorCrossProduct__FP5Vec3FN20\t\n"
		"lfs 0, 0x18(1)\t\n"
		"lfs 13, 0x1c(1)\t\n"
		"lfs 12, 0x20(1)\t\n"
		"fneg 0, 0\t\n"
		"fneg 13, 13\t\n"
		"stfs 0, 0x10(31)\t\n"
		"fneg 12, 12\t\n"
		"stfs 13, 0x14(31)\t\n"
		"stfs 12, 0x18(31)\t\n"
		"lwz 0, 0x54(1)\t\n"
		"mtlr 0\t\n"
		"lmw 30, 0x48(1)\t\n"
		"addi 1, 1, 0x50\t\n"
	);
}
#endif

#if 0
dontmangle void MATHS_SetMatrixToFace2FromX__FP10PSR_MATRIXP5Vec3F() {

}
#else
dontmangle __ASM void MATHS_SetMatrixToFace2FromX__FP10PSR_MATRIXP5Vec3F() {
	asm volatile(
		"stwu 1, -0x50(1)\t\n"
		"mflr 0\t\n"
		"stmw 30, 0x48(1)\t\n"
		"stw 0, 0x54(1)\t\n"
		"lwz 11, 0(4)\t\n"
		"addi 9, 1, 0x28\t\n"
		"lwz 10, 8(4)\t\n"
		"mr 31, 3\t\n"
		"lwz 0, 4(4)\t\n"
		"mr 30, 9\t\n"
		"stw 11, 0x28(1)\t\n"
		"mr 3, 9\t\n"
		"stw 0, 4(9)\t\n"
		"stw 10, 8(9)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lis 9, lbl_800EEB98@ha\t\n"
		"lfs 0, 0x28(1)\t\n"
		"lfs 12, 0x2c(1)\t\n"
		"lfs 13, 0x30(1)\t\n"
		"lfs 11, lbl_800EEB98@l(9)\t\n"
		"stfs 0, 0(31)\t\n"
		"fcmpu 0, 0, 11\t\n"
		"stfs 13, 8(31)\t\n"
		"stfs 12, 4(31)\t\n"
		"bge lbl_80003CA4\t\n"
		"lis 11, lbl_800EEB9C@ha\t\n"
		"lis 9, lbl_800EEBA0@ha\t\n"
		"lfs 13, lbl_800EEBA0@l(9)\t\n"
		"lfs 0, lbl_800EEB9C@l(11)\t\n"
		"stfs 13, 0x40(1)\t\n"
		"stfs 0, 0x38(1)\t\n"
		"stfs 13, 0x3c(1)\t\n"
		"b lbl_80003CE4\t\n"
		"lbl_80003CA4:\t\n"
		"fcmpu 0, 12, 11\t\n"
		"bge lbl_80003CC8\t\n"
		"lis 9, lbl_800EEBA0@ha\t\n"
		"lis 11, lbl_800EEB9C@ha\t\n"
		"lfs 13, lbl_800EEBA0@l(9)\t\n"
		"lfs 0, lbl_800EEB9C@l(11)\t\n"
		"stfs 13, 0x40(1)\t\n"
		"stfs 0, 0x3c(1)\t\n"
		"b lbl_80003CE0\t\n"
		"lbl_80003CC8:\t\n"
		"lis 9, lbl_800EEBA0@ha\t\n"
		"lis 11, lbl_800EEB9C@ha\t\n"
		"lfs 13, lbl_800EEBA0@l(9)\t\n"
		"lfs 0, lbl_800EEB9C@l(11)\t\n"
		"stfs 13, 0x3c(1)\t\n"
		"stfs 0, 0x40(1)\t\n"
		"lbl_80003CE0:\t\n"
		"stfs 13, 0x38(1)\t\n"
		"lbl_80003CE4:\t\n"
		"addi 3, 1, 8\t\n"
		"addi 4, 1, 0x38\t\n"
		"mr 5, 30\t\n"
		"bl MATHS_VectorCrossProduct__FP5Vec3FN20\t\n"
		"lfs 12, 8(1)\t\n"
		"mr 5, 30\t\n"
		"lfs 13, 0xc(1)\t\n"
		"addi 3, 1, 0x18\t\n"
		"lfs 0, 0x10(1)\t\n"
		"addi 4, 1, 8\t\n"
		"stfs 12, 0x20(31)\t\n"
		"stfs 13, 0x24(31)\t\n"
		"stfs 0, 0x28(31)\t\n"
		"bl MATHS_VectorCrossProduct__FP5Vec3FN20\t\n"
		"lfs 0, 0x18(1)\t\n"
		"lfs 13, 0x1c(1)\t\n"
		"lfs 12, 0x20(1)\t\n"
		"fneg 0, 0\t\n"
		"fneg 13, 13\t\n"
		"stfs 0, 0x10(31)\t\n"
		"fneg 12, 12\t\n"
		"stfs 13, 0x14(31)\t\n"
		"stfs 12, 0x18(31)\t\n"
		"lwz 0, 0x54(1)\t\n"
		"mtlr 0\t\n"
		"lmw 30, 0x48(1)\t\n"
		"addi 1, 1, 0x50\t\n"
	);
}
#endif

#if 0
dontmangle void MATHS_SetMatrixToFace2FromY__FP10PSR_MATRIXP5Vec3F() {

}
#else
dontmangle __ASM void MATHS_SetMatrixToFace2FromY__FP10PSR_MATRIXP5Vec3F() {
	asm volatile(
		"stwu 1, -0x50(1)\t\n"
		"mflr 0\t\n"
		"stmw 30, 0x48(1)\t\n"
		"stw 0, 0x54(1)\t\n"
		"lwz 11, 0(4)\t\n"
		"addi 9, 1, 0x28\t\n"
		"lwz 10, 8(4)\t\n"
		"mr 31, 3\t\n"
		"lwz 0, 4(4)\t\n"
		"mr 30, 9\t\n"
		"stw 11, 0x28(1)\t\n"
		"mr 3, 9\t\n"
		"stw 0, 4(9)\t\n"
		"stw 10, 8(9)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lis 9, lbl_800EEBA4@ha\t\n"
		"lfs 0, 0x28(1)\t\n"
		"lfs 12, 0x2c(1)\t\n"
		"lfs 13, 0x30(1)\t\n"
		"lfs 11, lbl_800EEBA4@l(9)\t\n"
		"stfs 0, 0x10(31)\t\n"
		"fcmpu 0, 0, 11\t\n"
		"stfs 13, 0x18(31)\t\n"
		"stfs 12, 0x14(31)\t\n"
		"bge lbl_80003DD8\t\n"
		"lis 11, lbl_800EEBA8@ha\t\n"
		"lis 9, lbl_800EEBAC@ha\t\n"
		"lfs 13, lbl_800EEBAC@l(9)\t\n"
		"lfs 0, lbl_800EEBA8@l(11)\t\n"
		"stfs 13, 0x40(1)\t\n"
		"stfs 0, 0x38(1)\t\n"
		"stfs 13, 0x3c(1)\t\n"
		"b lbl_80003E18\t\n"
		"lbl_80003DD8:\t\n"
		"fcmpu 0, 12, 11\t\n"
		"bge lbl_80003DFC\t\n"
		"lis 9, lbl_800EEBAC@ha\t\n"
		"lis 11, lbl_800EEBA8@ha\t\n"
		"lfs 13, lbl_800EEBAC@l(9)\t\n"
		"lfs 0, lbl_800EEBA8@l(11)\t\n"
		"stfs 13, 0x40(1)\t\n"
		"stfs 0, 0x3c(1)\t\n"
		"b lbl_80003E14\t\n"
		"lbl_80003DFC:\t\n"
		"lis 9, lbl_800EEBAC@ha\t\n"
		"lis 11, lbl_800EEBA8@ha\t\n"
		"lfs 13, lbl_800EEBAC@l(9)\t\n"
		"lfs 0, lbl_800EEBA8@l(11)\t\n"
		"stfs 13, 0x3c(1)\t\n"
		"stfs 0, 0x40(1)\t\n"
		"lbl_80003E14:\t\n"
		"stfs 13, 0x38(1)\t\n"
		"lbl_80003E18:\t\n"
		"addi 3, 1, 8\t\n"
		"addi 4, 1, 0x38\t\n"
		"mr 5, 30\t\n"
		"bl MATHS_VectorCrossProduct__FP5Vec3FN20\t\n"
		"lfs 12, 8(1)\t\n"
		"mr 5, 30\t\n"
		"lfs 13, 0xc(1)\t\n"
		"addi 3, 1, 0x18\t\n"
		"lfs 0, 0x10(1)\t\n"
		"addi 4, 1, 8\t\n"
		"stfs 12, 0x20(31)\t\n"
		"stfs 13, 0x24(31)\t\n"
		"stfs 0, 0x28(31)\t\n"
		"bl MATHS_VectorCrossProduct__FP5Vec3FN20\t\n"
		"lfs 0, 0x18(1)\t\n"
		"lfs 13, 0x1c(1)\t\n"
		"lfs 12, 0x20(1)\t\n"
		"fneg 0, 0\t\n"
		"fneg 13, 13\t\n"
		"stfs 0, 0(31)\t\n"
		"fneg 12, 12\t\n"
		"stfs 13, 4(31)\t\n"
		"stfs 12, 8(31)\t\n"
		"lwz 0, 0x54(1)\t\n"
		"mtlr 0\t\n"
		"lmw 30, 0x48(1)\t\n"
		"addi 1, 1, 0x50\t\n"
	);
}
#endif

#if 0
void MATHS_SetPSRMtxFromCRotMtx(PSR_MATRIX *, CRotMatrix *) {

}
#else
dontmangle __ASM void MATHS_SetPSRMtxFromCRotMtx__FP10PSR_MATRIXP10CRotMatrix() {
	asm volatile(
		"lfs 0, 0(4)\t\n"
		"lis 9, lbl_800EEBB0@ha\t\n"
		"lfs 11, lbl_800EEBB0@l(9)\t\n"
		"lis 11, lbl_800EEBB4@ha\t\n"
		"stfs 0, 0(3)\t\n"
		"lfs 10, lbl_800EEBB4@l(11)\t\n"
		"lfs 0, 4(4)\t\n"
		"stfs 0, 4(3)\t\n"
		"lfs 13, 8(4)\t\n"
		"stfs 11, 0xc(3)\t\n"
		"stfs 13, 8(3)\t\n"
		"lfs 0, 0xc(4)\t\n"
		"stfs 0, 0x10(3)\t\n"
		"lfs 13, 0x10(4)\t\n"
		"stfs 13, 0x14(3)\t\n"
		"lfs 12, 0x14(4)\t\n"
		"stfs 11, 0x1c(3)\t\n"
		"stfs 12, 0x18(3)\t\n"
		"lfs 0, 0x18(4)\t\n"
		"stfs 0, 0x20(3)\t\n"
		"lfs 13, 0x1c(4)\t\n"
		"stfs 13, 0x24(3)\t\n"
		"lfs 0, 0x20(4)\t\n"
		"stfs 10, 0x3c(3)\t\n"
		"stfs 0, 0x28(3)\t\n"
		"stfs 11, 0x38(3)\t\n"
		"stfs 11, 0x2c(3)\t\n"
		"stfs 11, 0x30(3)\t\n"
		"stfs 11, 0x34(3)\t\n"
	);
}
#endif

#if 0
void MATHS_PS2_SFX_MulMatrix(PSR_MATRIX *, PSR_MATRIX *, PSR_MATRIX *) {

}
#else
dontmangle __ASM void MATHS_PS2_SFX_MulMatrix__FP10PSR_MATRIXN20() {
	asm volatile(
		"stwu 1, -0xd8(1)\t\n"
		"stfd 14, 0x48(1)\t\n"
		"stfd 15, 0x50(1)\t\n"
		"stfd 16, 0x58(1)\t\n"
		"stfd 17, 0x60(1)\t\n"
		"stfd 18, 0x68(1)\t\n"
		"stfd 19, 0x70(1)\t\n"
		"stfd 20, 0x78(1)\t\n"
		"stfd 21, 0x80(1)\t\n"
		"stfd 22, 0x88(1)\t\n"
		"stfd 23, 0x90(1)\t\n"
		"stfd 24, 0x98(1)\t\n"
		"stfd 25, 0xa0(1)\t\n"
		"stfd 26, 0xa8(1)\t\n"
		"stfd 27, 0xb0(1)\t\n"
		"stfd 28, 0xb8(1)\t\n"
		"stfd 29, 0xc0(1)\t\n"
		"stfd 30, 0xc8(1)\t\n"
		"stfd 31, 0xd0(1)\t\n"
		"lfs 13, 4(4)\t\n"
		"addi 9, 1, 8\t\n"
		"lfs 18, 0x10(5)\t\n"
		"li 11, 0x30\t\n"
		"lfs 1, 0x14(5)\t\n"
		"lfs 14, 0x18(5)\t\n"
		"fmuls 6, 13, 18\t\n"
		"lfs 3, 0x1c(5)\t\n"
		"fmuls 5, 13, 1\t\n"
		"lfs 19, 4(5)\t\n"
		"fmuls 12, 13, 14\t\n"
		"lfs 23, 0xc(5)\t\n"
		"fmuls 13, 13, 3\t\n"
		"lfs 2, 0(4)\t\n"
		"lfs 20, 0(5)\t\n"
		"lfs 0, 0x14(4)\t\n"
		"fmadds 13, 2, 23, 13\t\n"
		"lfs 15, 8(5)\t\n"
		"fmadds 6, 2, 20, 6\t\n"
		"lfs 7, 0x10(4)\t\n"
		"fmadds 5, 2, 19, 5\t\n"
		"lfs 31, 8(4)\t\n"
		"fmuls 10, 0, 3\t\n"
		"lfs 22, 0x20(5)\t\n"
		"fmuls 9, 0, 18\t\n"
		"lfs 21, 0x24(5)\t\n"
		"fmuls 8, 0, 1\t\n"
		"lfs 25, 0x2c(5)\t\n"
		"fmadds 2, 2, 15, 12\t\n"
		"lfs 16, 0x28(5)\t\n"
		"fmadds 10, 7, 23, 10\t\n"
		"lfs 4, 0x18(4)\t\n"
		"fmadds 9, 7, 20, 9\t\n"
		"lfs 27, 0x3c(5)\t\n"
		"fmadds 8, 7, 19, 8\t\n"
		"lfs 11, 0xc(4)\t\n"
		"fmadds 13, 31, 25, 13\t\n"
		"lfs 28, 0x30(5)\t\n"
		"fmadds 6, 31, 22, 6\t\n"
		"lfs 26, 0x34(5)\t\n"
		"fmadds 5, 31, 21, 5\t\n"
		"lfs 24, 0x24(4)\t\n"
		"fmuls 0, 0, 14\t\n"
		"lfs 17, 0x38(5)\t\n"
		"fmadds 13, 11, 27, 13\t\n"
		"lfs 12, 0x1c(4)\t\n"
		"fmadds 10, 4, 25, 10\t\n"
		"lfs 29, 0x20(4)\t\n"
		"fmadds 6, 11, 28, 6\t\n"
		"fmadds 5, 11, 26, 5\t\n"
		"lfs 30, 0x28(4)\t\n"
		"fmadds 7, 7, 15, 0\t\n"
		"fmadds 31, 31, 16, 2\t\n"
		"lfs 2, 0x2c(4)\t\n"
		"fmadds 10, 12, 27, 10\t\n"
		"fmuls 0, 24, 18\t\n"
		"stfs 13, 0x14(1)\t\n"
		"fmadds 9, 4, 22, 9\t\n"
		"stfs 10, 0x24(1)\t\n"
		"fmadds 8, 4, 21, 8\t\n"
		"stfs 6, 8(1)\t\n"
		"fmadds 11, 11, 17, 31\t\n"
		"stfs 5, 0xc(1)\t\n"
		"fmadds 9, 12, 28, 9\t\n"
		"stfs 11, 0x10(1)\t\n"
		"fmadds 0, 29, 20, 0\t\n"
		"stfs 9, 0x18(1)\t\n"
		"fmadds 8, 12, 26, 8\t\n"
		"fmadds 4, 4, 16, 7\t\n"
		"stfs 8, 0x1c(1)\t\n"
		"fmadds 0, 30, 22, 0\t\n"
		"fmadds 12, 12, 17, 4\t\n"
		"stfs 12, 0x20(1)\t\n"
		"fmadds 0, 2, 28, 0\t\n"
		"stfs 0, 0x28(1)\t\n"
		"fmuls 10, 24, 3\t\n"
		"lfs 0, 0x34(4)\t\n"
		"fmuls 9, 24, 1\t\n"
		"lfs 13, 0x30(4)\t\n"
		"fmuls 24, 24, 14\t\n"
		"lfs 12, 0x38(4)\t\n"
		"fmuls 3, 0, 3\t\n"
		"fmuls 1, 0, 1\t\n"
		"lfs 11, 0x3c(4)\t\n"
		"fmadds 3, 13, 23, 3\t\n"
		"fmadds 1, 13, 19, 1\t\n"
		"fmuls 18, 0, 18\t\n"
		"fmadds 3, 12, 25, 3\t\n"
		"fmadds 1, 12, 21, 1\t\n"
		"fmadds 23, 29, 23, 10\t\n"
		"fmadds 20, 13, 20, 18\t\n"
		"fmadds 19, 29, 19, 9\t\n"
		"fmuls 0, 0, 14\t\n"
		"fmadds 3, 11, 27, 3\t\n"
		"fmadds 1, 11, 26, 1\t\n"
		"stfs 3, 0x44(1)\t\n"
		"fmadds 25, 30, 25, 23\t\n"
		"stfs 1, 0x3c(1)\t\n"
		"fmadds 22, 12, 22, 20\t\n"
		"fmadds 21, 30, 21, 19\t\n"
		"fmadds 13, 13, 15, 0\t\n"
		"fmadds 29, 29, 15, 24\t\n"
		"fmadds 27, 2, 27, 25\t\n"
		"fmadds 28, 11, 28, 22\t\n"
		"stfs 27, 0x34(1)\t\n"
		"fmadds 26, 2, 26, 21\t\n"
		"stfs 28, 0x38(1)\t\n"
		"fmadds 12, 12, 16, 13\t\n"
		"stfs 26, 0x2c(1)\t\n"
		"fmadds 30, 30, 16, 29\t\n"
		"fmadds 11, 11, 17, 12\t\n"
		"fmadds 2, 2, 17, 30\t\n"
		"stfs 11, 0x40(1)\t\n"
		"stfs 2, 0x30(1)\t\n"
		"lbl_80004114:\t\n"
		"lwz 0, 0(9)\t\n"
		"addic. 11, 11, -24\t\n"
		"stw 0, 0(3)\t\n"
		"lwz 0, 4(9)\t\n"
		"stw 0, 4(3)\t\n"
		"lwz 0, 8(9)\t\n"
		"stw 0, 8(3)\t\n"
		"lwz 0, 0xc(9)\t\n"
		"stw 0, 0xc(3)\t\n"
		"lwz 0, 0x10(9)\t\n"
		"stw 0, 0x10(3)\t\n"
		"lwz 0, 0x14(9)\t\n"
		"addi 9, 9, 0x18\t\n"
		"stw 0, 0x14(3)\t\n"
		"addi 3, 3, 0x18\t\n"
		"bne lbl_80004114\t\n"
		"lwz 0, 0(9)\t\n"
		"stw 0, 0(3)\t\n"
		"lwz 0, 4(9)\t\n"
		"stw 0, 4(3)\t\n"
		"lwz 0, 8(9)\t\n"
		"stw 0, 8(3)\t\n"
		"lwz 0, 0xc(9)\t\n"
		"stw 0, 0xc(3)\t\n"
		"lfd 14, 0x48(1)\t\n"
		"lfd 15, 0x50(1)\t\n"
		"lfd 16, 0x58(1)\t\n"
		"lfd 17, 0x60(1)\t\n"
		"lfd 18, 0x68(1)\t\n"
		"lfd 19, 0x70(1)\t\n"
		"lfd 20, 0x78(1)\t\n"
		"lfd 21, 0x80(1)\t\n"
		"lfd 22, 0x88(1)\t\n"
		"lfd 23, 0x90(1)\t\n"
		"lfd 24, 0x98(1)\t\n"
		"lfd 25, 0xa0(1)\t\n"
		"lfd 26, 0xa8(1)\t\n"
		"lfd 27, 0xb0(1)\t\n"
		"lfd 28, 0xb8(1)\t\n"
		"lfd 29, 0xc0(1)\t\n"
		"lfd 30, 0xc8(1)\t\n"
		"lfd 31, 0xd0(1)\t\n"
		"addi 1, 1, 0xd8\t\n"
	);
}
#endif

#if 0
void MATHS_NormaliseMatrix(PSR_MATRIX *) {

}
#else
dontmangle __ASM void MATHS_NormaliseMatrix__FP10PSR_MATRIX() {
	asm volatile(
		"stwu 1, -0x20(1)\t\n"
		"mflr 0\t\n"
		"stmw 30, 0x18(1)\t\n"
		"stw 0, 0x24(1)\t\n"
		"mr 30, 3\t\n"
		"lfs 12, 0(30)\t\n"
		"addi 3, 1, 8\t\n"
		"lfs 0, 4(30)\t\n"
		"lfs 13, 8(30)\t\n"
		"stfs 12, 8(1)\t\n"
		"stfs 0, 0xc(1)\t\n"
		"stfs 13, 0x10(1)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lfs 9, 8(1)\t\n"
		"addi 3, 1, 8\t\n"
		"lfs 0, 0xc(1)\t\n"
		"lfs 13, 0x10(1)\t\n"
		"lfs 12, 0x10(30)\t\n"
		"lfs 11, 0x14(30)\t\n"
		"lfs 10, 0x18(30)\t\n"
		"stfs 9, 0(30)\t\n"
		"stfs 0, 4(30)\t\n"
		"stfs 13, 8(30)\t\n"
		"stfs 12, 8(1)\t\n"
		"stfs 11, 0xc(1)\t\n"
		"stfs 10, 0x10(1)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lfs 0, 0xc(1)\t\n"
		"addi 3, 1, 8\t\n"
		"lfs 13, 0x10(1)\t\n"
		"lfs 9, 8(1)\t\n"
		"lfs 12, 0x20(30)\t\n"
		"lfs 11, 0x24(30)\t\n"
		"lfs 10, 0x28(30)\t\n"
		"stfs 0, 0x14(30)\t\n"
		"stfs 13, 0x18(30)\t\n"
		"stfs 9, 0x10(30)\t\n"
		"stfs 12, 8(1)\t\n"
		"stfs 11, 0xc(1)\t\n"
		"stfs 10, 0x10(1)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lfs 13, 8(1)\t\n"
		"lfs 12, 0xc(1)\t\n"
		"lfs 0, 0x10(1)\t\n"
		"stfs 13, 0x20(30)\t\n"
		"stfs 0, 0x28(30)\t\n"
		"stfs 12, 0x24(30)\t\n"
		"lwz 0, 0x24(1)\t\n"
		"mtlr 0\t\n"
		"lmw 30, 0x18(1)\t\n"
		"addi 1, 1, 0x20\t\n"
	);
}
#endif

#if 0
void MATHS_GetXZAngleOfVec(Vec3F *) {

}
#else
dontmangle __ASM void MATHS_GetXZAngleOfVec__FP5Vec3F() {
	asm volatile(
		"stwu 1, -0x20(1)\t\n"
		"mflr 0\t\n"
		"stfd 31, 0x18(1)\t\n"
		"stw 0, 0x24(1)\t\n"
		"mr 11, 3\t\n"
		"lis 9, lbl_800EEBB8@ha\t\n"
		"lfs 0, 8(11)\t\n"
		"addi 3, 1, 8\t\n"
		"lfs 13, 0(11)\t\n"
		"lfs 31, lbl_800EEBB8@l(9)\t\n"
		"stfs 0, 0x10(1)\t\n"
		"stfs 13, 8(1)\t\n"
		"stfs 31, 0xc(1)\t\n"
		"bl MATHS_VectorNormalise__FP5Vec3F\t\n"
		"lfs 0, 8(1)\t\n"
		"fcmpu 7, 0, 31\t\n"
		"bne 7, lbl_800042FC\t\n"
		"lfs 0, 0x10(1)\t\n"
		"fcmpu 0, 0, 31\t\n"
		"ble lbl_800042F0\t\n"
		"lis 9, lbl_800EEBBC@ha\t\n"
		"lfs 1, lbl_800EEBBC@l(9)\t\n"
		"b lbl_80004384\t\n"
		"lbl_800042F0:\t\n"
		"lis 9, lbl_800EEBC0@ha\t\n"
		"lfs 1, lbl_800EEBC0@l(9)\t\n"
		"b lbl_80004384\t\n"
		"lbl_800042FC:\t\n"
		"lfs 1, 0x10(1)\t\n"
		"fcmpu 0, 1, 31\t\n"
		"bne lbl_80004320\t\n"
		"ble 7, lbl_80004314\t\n"
		"fmr 1, 31\t\n"
		"b lbl_80004384\t\n"
		"lbl_80004314:\t\n"
		"lis 9, lbl_800EEBC4@ha\t\n"
		"lfs 1, lbl_800EEBC4@l(9)\t\n"
		"b lbl_80004384\t\n"
		"lbl_80004320:\t\n"
		"fdivs 1, 1, 0\t\n"
		"fabs 1, 1\t\n"
		"bl func_800811DC\t\n"
		"lis 9, lbl_800EEBC8@ha\t\n"
		"lis 11, lbl_800EEBC4@ha\t\n"
		"lfs 0, lbl_800EEBC8@l(9)\t\n"
		"lfs 12, lbl_800EEBC4@l(11)\t\n"
		"fdivs 1, 1, 0\t\n"
		"lfs 13, 8(1)\t\n"
		"fmuls 1, 1, 12\t\n"
		"fcmpu 0, 13, 31\t\n"
		"ble lbl_8000436C\t\n"
		"lfs 0, 0x10(1)\t\n"
		"fcmpu 0, 0, 31\t\n"
		"bge lbl_80004384\t\n"
		"lis 9, lbl_800EEBCC@ha\t\n"
		"lfs 0, lbl_800EEBCC@l(9)\t\n"
		"fsubs 1, 0, 1\t\n"
		"b lbl_80004384\t\n"
		"lbl_8000436C:\t\n"
		"lfs 0, 0x10(1)\t\n"
		"fcmpu 0, 0, 31\t\n"
		"bge lbl_80004380\t\n"
		"fadds 1, 1, 12\t\n"
		"b lbl_80004384\t\n"
		"lbl_80004380:\t\n"
		"fsubs 1, 12, 1\t\n"
		"lbl_80004384:\t\n"
		"lwz 0, 0x24(1)\t\n"
		"mtlr 0\t\n"
		"lfd 31, 0x18(1)\t\n"
		"addi 1, 1, 0x20\t\n"
	);
}
#endif

extern float lbl_800EEBD0;
extern float lbl_800EEBD4;
extern float lbl_800EEBD8;

void MATHS_XZAngleToNormalisedVec(Vec3F *a1, float a2) {
	// float v1 = (a2 / 180.0) * 3.141593;
	float v1 = (a2 / lbl_800EEBD0) * lbl_800EEBD4;
	a1->x = cosf(v1);
	a1->y = lbl_800EEBD8; // 0.0
	a1->z = sinf(v1);
}

float MATHS_DistanceBetweenTwoPoints(Vec3F *a1, Vec3F *a2) {
	Vec3F v;
	v.x = a1->x - a2->x;
	v.y = a1->y - a2->y;
	v.z = a1->z - a2->z;

	return MATHS_VectorMagnitude(&v);
}

#if 0
dontmangle void func_8000445C() {

}
#else
dontmangle __ASM void func_8000445C() {
	asm volatile(
		"stwu 1, -0x18(1)\t\n"
		"lfs 11, 4(4)\t\n"
		"lfs 12, 4(3)\t\n"
		"lfs 0, 0(3)\t\n"
		"fsubs 12, 12, 11\t\n"
		"lfs 10, 0(4)\t\n"
		"lfs 13, 8(3)\t\n"
		"fmuls 1, 12, 12\t\n"
		"lfs 11, 8(4)\t\n"
		"fsubs 0, 0, 10\t\n"
		"fmadds 1, 0, 0, 1\t\n"
		"stfs 0, 8(1)\t\n"
		"fsubs 13, 13, 11\t\n"
		"stfs 12, 0xc(1)\t\n"
		"fmadds 1, 13, 13, 1\t\n"
		"stfs 13, 0x10(1)\t\n"
		"addi 1, 1, 0x18\t\n"
	);
}
#endif

#if 0
dontmangle void __ml__10CRotMatrixT0() {

}
#else
dontmangle __ASM void __ml__10CRotMatrixT0() {
	asm volatile(
		"stwu 1, -0x38(1)\t\n"
		"stmw 30, 0x30(1)\t\n"
		"addi 31, 1, 8\t\n"
		"li 11, 0\t\n"
		"mr 12, 31\t\n"
		"lis 6, lbl_800EEBDC@ha\t\n"
		"lbl_800044BC:\t\n"
		"mulli 10, 11, 0xc\t\n"
		"li 9, 0\t\n"
		"addi 7, 11, 1\t\n"
		"lbl_800044C8:\t\n"
		"li 30, 3\t\n"
		"slwi 0, 9, 2\t\n"
		"mtctr 30\t\n"
		"addi 8, 9, 1\t\n"
		"lfs 12, lbl_800EEBDC@l(6)\t\n"
		"add 11, 10, 5\t\n"
		"add 9, 0, 4\t\n"
		"lbl_800044E4:\t\n"
		"lfs 13, 0(9)\t\n"
		"lfs 0, 0(11)\t\n"
		"addi 9, 9, 0xc\t\n"
		"addi 11, 11, 4\t\n"
		"fmadds 12, 13, 0, 12\t\n"
		"bdnz lbl_800044E4\t\n"
		"add 0, 0, 10\t\n"
		"mr 9, 8\t\n"
		"stfsx 12, 12, 0\t\n"
		"cmpwi 9, 2\t\n"
		"ble lbl_800044C8\t\n"
		"mr 11, 7\t\n"
		"cmpwi 11, 2\t\n"
		"ble lbl_800044BC\t\n"
		"mr 11, 31\t\n"
		"mr 9, 3\t\n"
		"li 10, 0x18\t\n"
		"lbl_80004528:\t\n"
		"lwz 0, 0(11)\t\n"
		"addic. 10, 10, -24\t\n"
		"stw 0, 0(9)\t\n"
		"lwz 0, 4(11)\t\n"
		"stw 0, 4(9)\t\n"
		"lwz 0, 8(11)\t\n"
		"stw 0, 8(9)\t\n"
		"lwz 0, 0xc(11)\t\n"
		"stw 0, 0xc(9)\t\n"
		"lwz 0, 0x10(11)\t\n"
		"stw 0, 0x10(9)\t\n"
		"lwz 0, 0x14(11)\t\n"
		"addi 11, 11, 0x18\t\n"
		"stw 0, 0x14(9)\t\n"
		"addi 9, 9, 0x18\t\n"
		"bne lbl_80004528\t\n"
		"lwz 0, 0(11)\t\n"
		"stw 0, 0(9)\t\n"
		"lwz 0, 4(11)\t\n"
		"stw 0, 4(9)\t\n"
		"lwz 0, 8(11)\t\n"
		"stw 0, 8(9)\t\n"
		"lmw 30, 0x30(1)\t\n"
		"addi 1, 1, 0x38\t\n"
	);
}
#endif

#if 0
void CRotMatrix::Load(float, float, float, float, float, float, float, float, float) {

}
#else
dontmangle __ASM void Load__10CRotMatrixfffffffff() {
	asm volatile(
		"lfs 0, 8(1)\t\n"
		"stfs 1, 0(3)\t\n"
		"stfs 0, 0x20(3)\t\n"
		"stfs 2, 0xc(3)\t\n"
		"stfs 3, 0x18(3)\t\n"
		"stfs 4, 4(3)\t\n"
		"stfs 5, 0x10(3)\t\n"
		"stfs 6, 0x1c(3)\t\n"
		"stfs 7, 8(3)\t\n"
		"stfs 8, 0x14(3)\t\n"
	);
}
#endif

#if 0
void CRotMatrix::SetRotation(Vec3F, float) {

}
#else
dontmangle __ASM void SetRotation__10CRotMatrixG5Vec3Ff() {
	asm volatile(
		"stwu 1, -0x1b8(1)\t\n"
		"mflr 0\t\n"
		"stfd 24, 0x178(1)\t\n"
		"stfd 25, 0x180(1)\t\n"
		"stfd 26, 0x188(1)\t\n"
		"stfd 27, 0x190(1)\t\n"
		"stfd 28, 0x198(1)\t\n"
		"stfd 29, 0x1a0(1)\t\n"
		"stfd 30, 0x1a8(1)\t\n"
		"stfd 31, 0x1b0(1)\t\n"
		"stmw 22, 0x150(1)\t\n"
		"stw 0, 0x1bc(1)\t\n"
		"mr 30, 4\t\n"
		"lis 9, lbl_800EEBE0@ha\t\n"
		"lfs 30, lbl_800EEBE0@l(9)\t\n"
		"lis 11, lbl_800EEBE4@ha\t\n"
		"lfs 0, 0(30)\t\n"
		"fmr 24, 1\t\n"
		"lfs 31, lbl_800EEBE4@l(11)\t\n"
		"addi 27, 1, 0x38\t\n"
		"fdivs 0, 0, 30\t\n"
		"addi 26, 1, 0x60\t\n"
		"addi 24, 1, 0xb0\t\n"
		"addi 25, 1, 0x100\t\n"
		"addi 23, 1, 0x88\t\n"
		"mr 31, 3\t\n"
		"lis 29, 0x800f\t\n"
		"lis 28, 0x800f\t\n"
		"mr 22, 24\t\n"
		"fmuls 1, 0, 31\t\n"
		"bl sinf\t\n"
		"lfs 0, 0(30)\t\n"
		"fmr 27, 1\t\n"
		"fdivs 0, 0, 30\t\n"
		"fmuls 1, 0, 31\t\n"
		"bl cosf\t\n"
		"lfs 0, 4(30)\t\n"
		"fmr 29, 1\t\n"
		"fdivs 0, 0, 30\t\n"
		"fmuls 1, 0, 31\t\n"
		"bl sinf\t\n"
		"lfs 0, 4(30)\t\n"
		"fmr 25, 1\t\n"
		"fdivs 0, 0, 30\t\n"
		"fmuls 1, 0, 31\t\n"
		"bl cosf\t\n"
		"lfs 0, 8(30)\t\n"
		"fmr 28, 1\t\n"
		"fdivs 0, 0, 30\t\n"
		"fmuls 1, 0, 31\t\n"
		"bl sinf\t\n"
		"lfs 0, 8(30)\t\n"
		"fmr 26, 1\t\n"
		"fdivs 0, 0, 30\t\n"
		"fmuls 1, 0, 31\t\n"
		"bl cosf\t\n"
		"lfs 2, -0x1414(29)\t\n"
		"fmr 31, 1\t\n"
		"lfs 1, -0x1418(28)\t\n"
		"addi 3, 1, 0x10\t\n"
		"fmr 3, 2\t\n"
		"stfs 29, 8(1)\t\n"
		"fmr 4, 3\t\n"
		"fmr 7, 4\t\n"
		"fmr 5, 29\t\n"
		"fmr 8, 27\t\n"
		"fneg 6, 27\t\n"
		"bl Load__10CRotMatrixfffffffff\t\n"
		"lfs 2, -0x1414(29)\t\n"
		"fmr 3, 25\t\n"
		"lfs 5, -0x1418(28)\t\n"
		"fneg 7, 3\t\n"
		"fmr 4, 2\t\n"
		"stfs 28, 8(1)\t\n"
		"fmr 6, 4\t\n"
		"mr 3, 27\t\n"
		"fmr 8, 6\t\n"
		"fmr 1, 28\t\n"
		"bl Load__10CRotMatrixfffffffff\t\n"
		"lfs 3, -0x1414(29)\t\n"
		"fmr 1, 31\t\n"
		"lfs 0, -0x1418(28)\t\n"
		"fmr 4, 26\t\n"
		"fmr 6, 3\t\n"
		"mr 3, 26\t\n"
		"fmr 7, 6\t\n"
		"stfs 0, 8(1)\t\n"
		"fneg 2, 26\t\n"
		"fmr 5, 1\t\n"
		"fmr 8, 7\t\n"
		"bl Load__10CRotMatrixfffffffff\t\n"
		"addi 9, 1, 0xd8\t\n"
		"addi 5, 1, 0x128\t\n"
		"mr 30, 9\t\n"
		"li 11, 0x18\t\n"
		"lbl_80004734:\t\n"
		"lwz 0, 0(26)\t\n"
		"addic. 11, 11, -24\t\n"
		"stw 0, 0(9)\t\n"
		"lwz 0, 4(26)\t\n"
		"stw 0, 4(9)\t\n"
		"lwz 0, 8(26)\t\n"
		"stw 0, 8(9)\t\n"
		"lwz 0, 0xc(26)\t\n"
		"stw 0, 0xc(9)\t\n"
		"lwz 0, 0x10(26)\t\n"
		"stw 0, 0x10(9)\t\n"
		"lwz 0, 0x14(26)\t\n"
		"addi 26, 26, 0x18\t\n"
		"stw 0, 0x14(9)\t\n"
		"addi 9, 9, 0x18\t\n"
		"bne lbl_80004734\t\n"
		"lwz 0, 0(26)\t\n"
		"mr 11, 5\t\n"
		"li 10, 0x18\t\n"
		"stw 0, 0(9)\t\n"
		"lwz 0, 4(26)\t\n"
		"stw 0, 4(9)\t\n"
		"lwz 0, 8(26)\t\n"
		"stw 0, 8(9)\t\n"
		"lbl_80004794:\t\n"
		"lwz 0, 0(27)\t\n"
		"addic. 10, 10, -24\t\n"
		"stw 0, 0(11)\t\n"
		"lwz 0, 4(27)\t\n"
		"stw 0, 4(11)\t\n"
		"lwz 0, 8(27)\t\n"
		"stw 0, 8(11)\t\n"
		"lwz 0, 0xc(27)\t\n"
		"stw 0, 0xc(11)\t\n"
		"lwz 0, 0x10(27)\t\n"
		"stw 0, 0x10(11)\t\n"
		"lwz 0, 0x14(27)\t\n"
		"addi 27, 27, 0x18\t\n"
		"stw 0, 0x14(11)\t\n"
		"addi 11, 11, 0x18\t\n"
		"bne lbl_80004794\t\n"
		"lwz 0, 0(27)\t\n"
		"addi 4, 1, 0x10\t\n"
		"mr 3, 25\t\n"
		"stw 0, 0(11)\t\n"
		"lwz 0, 4(27)\t\n"
		"stw 0, 4(11)\t\n"
		"lwz 0, 8(27)\t\n"
		"stw 0, 8(11)\t\n"
		"bl __ml__10CRotMatrixT0\t\n"
		"mr 3, 24\t\n"
		"mr 4, 25\t\n"
		"mr 5, 30\t\n"
		"bl __ml__10CRotMatrixT0\t\n"
		"mr 11, 22\t\n"
		"mr 9, 23\t\n"
		"li 10, 0x18\t\n"
		"lbl_80004814:\t\n"
		"lwz 0, 0(11)\t\n"
		"addic. 10, 10, -24\t\n"
		"stw 0, 0(9)\t\n"
		"lwz 0, 4(11)\t\n"
		"stw 0, 4(9)\t\n"
		"lwz 0, 8(11)\t\n"
		"stw 0, 8(9)\t\n"
		"lwz 0, 0xc(11)\t\n"
		"stw 0, 0xc(9)\t\n"
		"lwz 0, 0x10(11)\t\n"
		"stw 0, 0x10(9)\t\n"
		"lwz 0, 0x14(11)\t\n"
		"addi 11, 11, 0x18\t\n"
		"stw 0, 0x14(9)\t\n"
		"addi 9, 9, 0x18\t\n"
		"bne lbl_80004814\t\n"
		"lwz 0, 0(11)\t\n"
		"mr 8, 23\t\n"
		"mr 10, 31\t\n"
		"li 7, 0x18\t\n"
		"stw 0, 0(9)\t\n"
		"lwz 0, 4(11)\t\n"
		"stw 0, 4(9)\t\n"
		"lwz 0, 8(11)\t\n"
		"stw 0, 8(9)\t\n"
		"lbl_80004878:\t\n"
		"lwz 0, 0(8)\t\n"
		"addic. 7, 7, -24\t\n"
		"stw 0, 0(10)\t\n"
		"lwz 0, 4(8)\t\n"
		"stw 0, 4(10)\t\n"
		"lwz 0, 8(8)\t\n"
		"stw 0, 8(10)\t\n"
		"lwz 0, 0xc(8)\t\n"
		"stw 0, 0xc(10)\t\n"
		"lwz 0, 0x10(8)\t\n"
		"stw 0, 0x10(10)\t\n"
		"lwz 0, 0x14(8)\t\n"
		"addi 8, 8, 0x18\t\n"
		"stw 0, 0x14(10)\t\n"
		"addi 10, 10, 0x18\t\n"
		"bne lbl_80004878\t\n"
		"lwz 0, 0(8)\t\n"
		"lis 9, lbl_800EEBE8@ha\t\n"
		"lfs 0, lbl_800EEBE8@l(9)\t\n"
		"stw 0, 0(10)\t\n"
		"lwz 0, 4(8)\t\n"
		"fcmpu 0, 24, 0\t\n"
		"stw 0, 4(10)\t\n"
		"lwz 0, 8(8)\t\n"
		"stw 0, 8(10)\t\n"
		"beq lbl_8000494C\t\n"
		"lfs 10, 0(31)\t\n"
		"lfs 8, 4(31)\t\n"
		"lfs 6, 8(31)\t\n"
		"fmuls 10, 10, 24\t\n"
		"lfs 7, 0xc(31)\t\n"
		"fmuls 8, 8, 24\t\n"
		"lfs 9, 0x10(31)\t\n"
		"fmuls 6, 6, 24\t\n"
		"lfs 11, 0x14(31)\t\n"
		"fmuls 7, 7, 24\t\n"
		"lfs 12, 0x18(31)\t\n"
		"fmuls 9, 9, 24\t\n"
		"lfs 13, 0x1c(31)\t\n"
		"fmuls 11, 11, 24\t\n"
		"lfs 0, 0x20(31)\t\n"
		"fmuls 12, 12, 24\t\n"
		"fmuls 13, 13, 24\t\n"
		"stfs 10, 0(31)\t\n"
		"fmuls 0, 0, 24\t\n"
		"stfs 8, 4(31)\t\n"
		"stfs 0, 0x20(31)\t\n"
		"stfs 6, 8(31)\t\n"
		"stfs 7, 0xc(31)\t\n"
		"stfs 9, 0x10(31)\t\n"
		"stfs 11, 0x14(31)\t\n"
		"stfs 12, 0x18(31)\t\n"
		"stfs 13, 0x1c(31)\t\n"
		"lbl_8000494C:\t\n"
		"lwz 0, 0x1bc(1)\t\n"
		"mtlr 0\t\n"
		"lmw 22, 0x150(1)\t\n"
		"lfd 24, 0x178(1)\t\n"
		"lfd 25, 0x180(1)\t\n"
		"lfd 26, 0x188(1)\t\n"
		"lfd 27, 0x190(1)\t\n"
		"lfd 28, 0x198(1)\t\n"
		"lfd 29, 0x1a0(1)\t\n"
		"lfd 30, 0x1a8(1)\t\n"
		"lfd 31, 0x1b0(1)\t\n"
		"addi 1, 1, 0x1b8\t\n"
	);
}
#endif

