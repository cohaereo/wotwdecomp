#include "types.h"

#if 0
dontmangle void func_80006238() {

}
#else
dontmangle __ASM void func_80006238() {
	asm volatile(
		"lis 9, lbl_801906D0@ha\t\n"
		"li 6, 0x1e\t\n"
		"mr 10, 3\t\n"
		"li 0, 0\t\n"
		"addi 9, 9, lbl_801906D0@l\t\n"
		"li 11, -1\t\n"
		"mtctr 6\t\n"
		"stw 9, 0xe4(10)\t\n"
		"stw 11, 0(10)\t\n"
		"li 7, 0\t\n"
		"stw 0, 0xd4(10)\t\n"
		"li 8, -1\t\n"
		"stw 0, 0xb8(10)\t\n"
		"addi 11, 10, 0x40\t\n"
		"stw 0, 0xbc(10)\t\n"
		"addi 9, 10, 4\t\n"
		"stw 0, 0xc0(10)\t\n"
		"stw 0, 0xc4(10)\t\n"
		"stw 0, 0xd0(10)\t\n"
		"lbl_80006284:\t\n"
		"sth 7, 0(9)\t\n"
		"stw 8, 0(11)\t\n"
		"addi 9, 9, 2\t\n"
		"addi 11, 11, 4\t\n"
		"bdnz lbl_80006284\t\n"
		"li 0, 0\t\n"
		"mr 3, 10\t\n"
		"stw 0, 0xe0(10)\t\n"
		"stw 0, 0xd8(10)\t\n"
		"stw 0, 0xdc(10)\t\n"
	);
}
#endif

#if 0
dontmangle void func_800062B0() {

}
#else
dontmangle __ASM void func_800062B0() {
	asm volatile(
		"stwu 1, -0x10(1)\t\n"
		"mflr 0\t\n"
		"stw 31, 0xc(1)\t\n"
		"stw 0, 0x14(1)\t\n"
		"lis 9, lbl_80190770@ha\t\n"
		"mr 31, 3\t\n"
		"li 0, 4\t\n"
		"li 11, 0\t\n"
		"addi 9, 9, lbl_80190770@l\t\n"
		"stw 0, 8(31)\t\n"
		"stw 11, 4(31)\t\n"
		"li 3, 0x10\t\n"
		"stw 9, 0x18(31)\t\n"
		"bl func_800C6F80\t\n"
		"lwz 0, 8(31)\t\n"
		"li 11, 0\t\n"
		"stw 3, 0(31)\t\n"
		"cmpw 11, 0\t\n"
		"bge lbl_80006328\t\n"
		"lis 9, lbl_80192E40@ha\t\n"
		"li 8, 0\t\n"
		"addi 10, 9, lbl_80192E40@l\t\n"
		"lbl_80006308:\t\n"
		"lwz 9, 0(31)\t\n"
		"addi 11, 11, 1\t\n"
		"stwx 10, 8, 9\t\n"
		"addi 10, 10, 0x180\t\n"
		"addi 8, 8, 4\t\n"
		"lwz 0, 8(31)\t\n"
		"cmpw 11, 0\t\n"
		"blt lbl_80006308\t\n"
		"lbl_80006328:\t\n"
		"li 0, 0\t\n"
		"mr 3, 31\t\n"
		"stw 0, 0x14(31)\t\n"
		"stw 0, 0xc(31)\t\n"
		"stw 0, 0x10(31)\t\n"
		"bl func_800063B0\t\n"
		"mr 3, 31\t\n"
		"lwz 0, 0x14(1)\t\n"
		"mtlr 0\t\n"
		"lwz 31, 0xc(1)\t\n"
		"addi 1, 1, 0x10\t\n"
		"blr\t\n"
		"stwu 1, -0x10(1)\t\n"
		"mflr 0\t\n"
		"stmw 30, 8(1)\t\n"
		"stw 0, 0x14(1)\t\n"
		"mr 31, 3\t\n"
		"lis 9, lbl_80190770@ha\t\n"
		"lwz 3, 0(31)\t\n"
		"addi 9, 9, lbl_80190770@l\t\n"
		"mr 30, 4\t\n"
		"stw 9, 0x18(31)\t\n"
		"cmpwi 3, 0\t\n"
		"beq lbl_8000638C\t\n"
		"bl func_800C6FF0\t\n"
		"lbl_8000638C:\t\n"
		"andi. 0, 30, 1\t\n"
		"beq lbl_8000639C\t\n"
		"mr 3, 31\t\n"
		"bl func_800C6FC8\t\n"
		"lbl_8000639C:\t\n"
		"lwz 0, 0x14(1)\t\n"
		"mtlr 0\t\n"
		"lmw 30, 8(1)\t\n"
		"addi 1, 1, 0x10\t\n"
	);
}
#endif

#if 0
dontmangle void func_800063B0() {

}
#else
dontmangle __ASM void func_800063B0() {
	asm volatile(
		"stwu 1, -0x18(1)\t\n"
		"mflr 0\t\n"
		"stmw 28, 8(1)\t\n"
		"stw 0, 0x1c(1)\t\n"
		"mr 30, 3\t\n"
		"li 31, 0\t\n"
		"lwz 0, 8(30)\t\n"
		"li 29, 1\t\n"
		"cmpw 31, 0\t\n"
		"bge lbl_80006438\t\n"
		"li 28, 0\t\n"
		"lbl_800063DC:\t\n"
		"lwz 11, 0(30)\t\n"
		"mr 4, 31\t\n"
		"lwzx 10, 28, 11\t\n"
		"lwz 9, 0xe4(10)\t\n"
		"lha 3, 0x10(9)\t\n"
		"lwz 0, 0x14(9)\t\n"
		"add 3, 10, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"cmpwi 29, 0\t\n"
		"li 9, 1\t\n"
		"bne lbl_80006410\t\n"
		"li 9, 0\t\n"
		"lbl_80006410:\t\n"
		"cmpwi 3, 0\t\n"
		"li 3, 1\t\n"
		"bne lbl_80006420\t\n"
		"li 3, 0\t\n"
		"lbl_80006420:\t\n"
		"lwz 0, 8(30)\t\n"
		"addi 31, 31, 1\t\n"
		"and 29, 9, 3\t\n"
		"addi 28, 28, 4\t\n"
		"cmpw 31, 0\t\n"
		"blt lbl_800063DC\t\n"
		"lbl_80006438:\t\n"
		"mr 3, 29\t\n"
		"lwz 0, 0x1c(1)\t\n"
		"mtlr 0\t\n"
		"lmw 28, 8(1)\t\n"
		"addi 1, 1, 0x18\t\n"
	);
}
#endif

#if 0
dontmangle void func_80006450() {

}
#else
dontmangle __ASM void func_80006450() {
	asm volatile(
		"stwu 1, -0x18(1)\t\n"
		"mflr 0\t\n"
		"stmw 29, 0xc(1)\t\n"
		"stw 0, 0x1c(1)\t\n"
		"mr 30, 3\t\n"
		"li 31, 0\t\n"
		"bl func_80006C2C\t\n"
		"lwz 0, 8(30)\t\n"
		"cmpw 31, 0\t\n"
		"bge lbl_800064B0\t\n"
		"li 29, 0\t\n"
		"lbl_8000647C:\t\n"
		"lwz 9, 0(30)\t\n"
		"addi 31, 31, 1\t\n"
		"lwzx 11, 29, 9\t\n"
		"addi 29, 29, 4\t\n"
		"lwz 9, 0xe4(11)\t\n"
		"lwz 0, 0x3c(9)\t\n"
		"lha 3, 0x38(9)\t\n"
		"mtlr 0\t\n"
		"add 3, 11, 3\t\n"
		"blrl\t\n"
		"lwz 0, 8(30)\t\n"
		"cmpw 31, 0\t\n"
		"blt lbl_8000647C\t\n"
		"lbl_800064B0:\t\n"
		"lwz 0, 0x1c(1)\t\n"
		"mtlr 0\t\n"
		"lmw 29, 0xc(1)\t\n"
		"addi 1, 1, 0x18\t\n"
	);
}
#endif

#if 0
dontmangle void func_800064C4() {

}
#else
dontmangle __ASM void func_800064C4() {
	asm volatile(
		"lwz 9, 8(3)\t\n"
		"li 0, 0\t\n"
		"stw 0, 4(3)\t\n"
		"cmpwi 9, 0\t\n"
		"ble lbl_80006504\t\n"
		"mtctr 9\t\n"
		"lwz 11, 0(3)\t\n"
		"lbl_800064E0:\t\n"
		"lwz 9, 0(11)\t\n"
		"addi 11, 11, 4\t\n"
		"lwz 0, 0xd4(9)\t\n"
		"and. 9, 0, 4\t\n"
		"beq lbl_80006500\t\n"
		"lwz 9, 4(3)\t\n"
		"addi 9, 9, 1\t\n"
		"stw 9, 4(3)\t\n"
		"lbl_80006500:\t\n"
		"bdnz lbl_800064E0\t\n"
		"lbl_80006504:\t\n"
		"lwz 3, 4(3)\t\n"
	);
}
#endif

#if 0
dontmangle void func_8000650C() {

}
#else
dontmangle __ASM void func_8000650C() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"cmpwi 4, 0x1d\t\n"
		"bgt lbl_80006548\t\n"
		"lwz 8, 0(3)\t\n"
		"slwi 11, 5, 2\t\n"
		"lwzx 10, 11, 8\t\n"
		"lwz 9, 0xe4(10)\t\n"
		"lha 3, 0x40(9)\t\n"
		"lwz 0, 0x44(9)\t\n"
		"add 3, 10, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"b lbl_8000654C\t\n"
		"lbl_80006548:\t\n"
		"li 3, 0\t\n"
		"lbl_8000654C:\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
dontmangle void func_8000655C() {

}
#else
dontmangle __ASM void func_8000655C() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"cmpwi 4, 0x1d\t\n"
		"bgt lbl_80006598\t\n"
		"lwz 8, 0(3)\t\n"
		"slwi 11, 5, 2\t\n"
		"lwzx 10, 11, 8\t\n"
		"lwz 9, 0xe4(10)\t\n"
		"lha 3, 0x48(9)\t\n"
		"lwz 0, 0x4c(9)\t\n"
		"add 3, 10, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"b lbl_8000659C\t\n"
		"lbl_80006598:\t\n"
		"li 3, 0\t\n"
		"lbl_8000659C:\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
void CControllers::IsButtonPressedOrHeld(unsigned char, unsigned char, unsigned short) {

}
#else
dontmangle __ASM void IsButtonPressedOrHeld__12CControllersUcUcUs() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"cmpwi 4, 0x1d\t\n"
		"bgt lbl_800065E8\t\n"
		"lwz 8, 0(3)\t\n"
		"slwi 11, 5, 2\t\n"
		"lwzx 10, 11, 8\t\n"
		"lwz 9, 0xe4(10)\t\n"
		"lha 3, 0x50(9)\t\n"
		"lwz 0, 0x54(9)\t\n"
		"add 3, 10, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"b lbl_800065EC\t\n"
		"lbl_800065E8:\t\n"
		"li 3, 0\t\n"
		"lbl_800065EC:\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
void CControllers::GetStickValue(unsigned char, unsigned char, unsigned char, unsigned char) {

}
#else
dontmangle __ASM void GetStickValue__12CControllersUcUcUcUc() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"cmpwi 4, 0x1d\t\n"
		"bgt lbl_80006638\t\n"
		"lwz 8, 0(3)\t\n"
		"slwi 11, 5, 2\t\n"
		"lwzx 10, 11, 8\t\n"
		"lwz 9, 0xe4(10)\t\n"
		"lha 3, 0x60(9)\t\n"
		"lwz 0, 0x64(9)\t\n"
		"add 3, 10, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"b lbl_80006640\t\n"
		"lbl_80006638:\t\n"
		"lis 9, lbl_800EECA8@ha\t\n"
		"lfs 1, lbl_800EECA8@l(9)\t\n"
		"lbl_80006640:\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
void CControllers::SetAnalogToDigitalCopying(bool) {

}
#else
dontmangle __ASM void SetAnalogToDigitalCopying__12CControllersb() {
	asm volatile(
		"lwz 0, 8(3)\t\n"
		"li 10, 0\t\n"
		"stw 4, 0xc(3)\t\n"
		"cmpw 10, 0\t\n"
		".byte 0x4c,0x80,0x00,0x20\t\n"
		"li 8, 0\t\n"
		"lbl_80006668:\t\n"
		"lwz 9, 0(3)\t\n"
		"addi 10, 10, 1\t\n"
		"lwzx 11, 8, 9\t\n"
		"addi 8, 8, 4\t\n"
		"stw 4, 0xc4(11)\t\n"
		"lwz 0, 8(3)\t\n"
		"cmpw 10, 0\t\n"
		"blt lbl_80006668\t\n"
	);
}
#endif

#if 0
dontmangle void func_8000668C() {

}
#else
dontmangle __ASM void func_8000668C() {
	asm volatile(
		"lwz 0, 8(3)\t\n"
		"li 10, 0\t\n"
		"stw 4, 0x10(3)\t\n"
		"cmpw 10, 0\t\n"
		".byte 0x4c,0x80,0x00,0x20\t\n"
		"li 8, 0\t\n"
		"lbl_800066A4:\t\n"
		"lwz 9, 0(3)\t\n"
		"addi 10, 10, 1\t\n"
		"lwzx 11, 8, 9\t\n"
		"addi 8, 8, 4\t\n"
		"stw 4, 0xc8(11)\t\n"
		"lwz 0, 8(3)\t\n"
		"cmpw 10, 0\t\n"
		"blt lbl_800066A4\t\n"
	);
}
#endif

#if 0
dontmangle void func_800066C8() {

}
#else
dontmangle __ASM void func_800066C8() {
	asm volatile(
		"lwz 11, 0(3)\t\n"
		"slwi 4, 4, 2\t\n"
		"li 3, 1\t\n"
		"lwzx 9, 4, 11\t\n"
		"lwz 0, 0xd0(9)\t\n"
		"cmpwi 0, 0\t\n"
		".byte 0x4c,0x82,0x00,0x20\t\n"
		"li 3, 0\t\n"
	);
}
#endif

#if 0
dontmangle void func_800066EC() {

}
#else
dontmangle __ASM void func_800066EC() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"lwz 10, 0(3)\t\n"
		"slwi 5, 5, 2\t\n"
		"lwzx 11, 5, 10\t\n"
		"lwz 9, 0xe4(11)\t\n"
		"lha 3, 0x70(9)\t\n"
		"lwz 0, 0x74(9)\t\n"
		"add 3, 11, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
dontmangle void func_8000672C() {

}
#else
dontmangle __ASM void func_8000672C() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"lwz 10, 0(3)\t\n"
		"slwi 5, 5, 2\t\n"
		"lwzx 11, 5, 10\t\n"
		"lwz 9, 0xe4(11)\t\n"
		"lha 3, 0x90(9)\t\n"
		"lwz 0, 0x94(9)\t\n"
		"add 3, 11, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
void CControllers::SwitchVibrations(bool) {

}
#else
dontmangle __ASM void SwitchVibrations__12CControllersb() {
	asm volatile(
		"stwu 1, -0x18(1)\t\n"
		"mflr 0\t\n"
		"stmw 29, 0xc(1)\t\n"
		"stw 0, 0x1c(1)\t\n"
		"mr 31, 3\t\n"
		"li 29, 0\t\n"
		"lwz 0, 8(31)\t\n"
		"stw 4, 0x14(31)\t\n"
		"cmpw 29, 0\t\n"
		"bge lbl_80006824\t\n"
		"li 30, 0\t\n"
		"lbl_80006798:\t\n"
		"lwz 0, 0x14(31)\t\n"
		"cmpwi 0, 0\t\n"
		"bne lbl_800067EC\t\n"
		"lwz 11, 0(31)\t\n"
		"li 4, 0\t\n"
		"lwzx 10, 30, 11\t\n"
		"lwz 9, 0xe4(10)\t\n"
		"lwz 0, 0x74(9)\t\n"
		"lha 3, 0x70(9)\t\n"
		"mtlr 0\t\n"
		"add 3, 10, 3\t\n"
		"blrl\t\n"
		"lwz 11, 0(31)\t\n"
		"li 4, 0\t\n"
		"lwzx 10, 30, 11\t\n"
		"lwz 9, 0xe4(10)\t\n"
		"lha 3, 0x90(9)\t\n"
		"lwz 0, 0x94(9)\t\n"
		"add 3, 10, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"lbl_800067EC:\t\n"
		"lwz 9, 0(31)\t\n"
		"addi 29, 29, 1\t\n"
		"lwz 4, 0x14(31)\t\n"
		"lwzx 11, 30, 9\t\n"
		"addi 30, 30, 4\t\n"
		"lwz 9, 0xe4(11)\t\n"
		"lwz 0, 0x6c(9)\t\n"
		"lha 3, 0x68(9)\t\n"
		"mtlr 0\t\n"
		"add 3, 11, 3\t\n"
		"blrl\t\n"
		"lwz 0, 8(31)\t\n"
		"cmpw 29, 0\t\n"
		"blt lbl_80006798\t\n"
		"lbl_80006824:\t\n"
		"lwz 0, 0x1c(1)\t\n"
		"mtlr 0\t\n"
		"lmw 29, 0xc(1)\t\n"
		"addi 1, 1, 0x18\t\n"
	);
}
#endif

#if 0
dontmangle void func_80006838() {

}
#else
dontmangle __ASM void func_80006838() {
	asm volatile(
		"lwz 11, 0(3)\t\n"
		"slwi 5, 5, 2\t\n"
		"lwzx 9, 5, 11\t\n"
		"lhz 3, 0xce(9)\t\n"
		"lhz 0, 0xcc(9)\t\n"
		"andc 3, 4, 3\t\n"
		"and 4, 4, 0\t\n"
		"and 3, 4, 3\t\n"
	);
}
#endif

#if 0
void CControllers::IsButtonHeld(unsigned char, unsigned char, unsigned short) {

}
#else
dontmangle __ASM void IsButtonHeld__12CControllersUcUcUs() {
	asm volatile(
		"lwz 11, 0(3)\t\n"
		"slwi 5, 5, 2\t\n"
		"lwzx 9, 5, 11\t\n"
		"lhz 0, 0xce(9)\t\n"
		"lhz 3, 0xcc(9)\t\n"
		"and 3, 3, 0\t\n"
		"and 3, 3, 4\t\n"
	);
}
#endif

#if 0
dontmangle void func_8000687C() {

}
#else
dontmangle __ASM void func_8000687C() {
	asm volatile(
		"lwz 11, 0(3)\t\n"
		"slwi 5, 5, 2\t\n"
		"lwzx 9, 5, 11\t\n"
		"lhz 3, 0xcc(9)\t\n"
		"and 3, 3, 4\t\n"
	);
}
#endif

#if 0
void CControllers::IsButtonReleased(unsigned char, unsigned char, unsigned short) {

}
#else
dontmangle __ASM void IsButtonReleased__12CControllersUcUcUs() {
	asm volatile(
		"lwz 11, 0(3)\t\n"
		"slwi 5, 5, 2\t\n"
		"lwzx 9, 5, 11\t\n"
		"lhz 0, 0xce(9)\t\n"
		"lhz 3, 0xcc(9)\t\n"
		"and 0, 4, 0\t\n"
		"andc 3, 4, 3\t\n"
		"and 3, 3, 0\t\n"
	);
}
#endif

#if 0
dontmangle void func_800068B8() {

}
#else
dontmangle __ASM void func_800068B8() {
	asm volatile(
		"lwz 9, 0(3)\t\n"
		"slwi 4, 4, 2\t\n"
		"lwzx 11, 4, 9\t\n"
		"lhz 3, 0xcc(11)\t\n"
	);
}
#endif

#if 0
dontmangle void func_800068CC() {

}
#else
dontmangle __ASM void func_800068CC() {
	asm volatile(
		"stwu 1, -0x10(1)\t\n"
		"mflr 0\t\n"
		"stmw 30, 8(1)\t\n"
		"stw 0, 0x14(1)\t\n"
		"li 0, 0\t\n"
		"ori 0, 0, 0xffff\t\n"
		"cmpw 4, 0\t\n"
		"bne lbl_80006964\t\n"
		"cmpwi 3, 0\t\n"
		"beq lbl_8000691C\t\n"
		"lis 9, lbl_80192E40@ha\t\n"
		"li 30, 3\t\n"
		"addi 31, 9, lbl_80192E40@l\t\n"
		"lbl_80006900:\t\n"
		"mr 3, 31\t\n"
		"bl func_800069D0\t\n"
		"addi 31, 31, 0x180\t\n"
		"cmpwi 30, 0\t\n"
		"addi 30, 30, -1\t\n"
		"bne lbl_80006900\t\n"
		"b lbl_80006964\t\n"
		"lbl_8000691C:\t\n"
		"lis 9, lbl_80192E40@ha\t\n"
		"addi 9, 9, lbl_80192E40@l\t\n"
		"cmpwi 9, 0\t\n"
		"beq lbl_80006964\t\n"
		"addi 31, 9, 0x600\t\n"
		"cmpw 31, 9\t\n"
		"beq lbl_80006964\t\n"
		"mr 30, 9\t\n"
		"lbl_8000693C:\t\n"
		"addi 31, 31, -384\t\n"
		"li 4, 0\t\n"
		"lwz 9, 0xe4(31)\t\n"
		"lha 3, 8(9)\t\n"
		"lwz 0, 0xc(9)\t\n"
		"add 3, 31, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"cmpw 31, 30\t\n"
		"bne lbl_8000693C\t\n"
		"lbl_80006964:\t\n"
		"lwz 0, 0x14(1)\t\n"
		"mtlr 0\t\n"
		"lmw 30, 8(1)\t\n"
		"addi 1, 1, 0x10\t\n"
	);
}
#endif

#if 0
dontmangle void func_80006978() {

}
#else
dontmangle __ASM void func_80006978() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"li 4, 0\t\n"
		"li 3, 1\t\n"
		"ori 4, 4, 0xffff\t\n"
		"bl func_800068CC\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
dontmangle void func_800069A4() {

}
#else
dontmangle __ASM void func_800069A4() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"li 4, 0\t\n"
		"li 3, 0\t\n"
		"ori 4, 4, 0xffff\t\n"
		"bl func_800068CC\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
dontmangle void func_800069D0() {

}
#else
dontmangle __ASM void func_800069D0() {
	asm volatile(
		"stwu 1, -0x10(1)\t\n"
		"mflr 0\t\n"
		"stw 31, 0xc(1)\t\n"
		"stw 0, 0x14(1)\t\n"
		"mr 31, 3\t\n"
		"bl func_80006238\t\n"
		"lis 9, lbl_80190788@ha\t\n"
		"li 0, -1\t\n"
		"addi 9, 9, lbl_80190788@l\t\n"
		"li 11, 0\t\n"
		"stw 9, 0xe4(31)\t\n"
		"li 10, 0\t\n"
		"stw 0, 0(31)\t\n"
		"addi 9, 31, 0xe9\t\n"
		"stw 11, 0x168(31)\t\n"
		"li 0, 1\t\n"
		"lbl_80006A10:\t\n"
		"stb 10, 0(9)\t\n"
		"addic. 0, 0, -1\t\n"
		"addi 9, 9, -1\t\n"
		"bge lbl_80006A10\t\n"
		"li 11, 4\t\n"
		"li 0, 0\t\n"
		"mtctr 11\t\n"
		"addi 9, 31, 0xed\t\n"
		"lbl_80006A30:\t\n"
		"stb 0, 0(9)\t\n"
		"addi 9, 9, -1\t\n"
		"bdnz lbl_80006A30\t\n"
		"li 0, 0\t\n"
		"mr 3, 31\t\n"
		"stb 0, 0x17c(31)\t\n"
		"stw 0, 0x170(31)\t\n"
		"stw 0, 0x174(31)\t\n"
		"stw 0, 0x16c(31)\t\n"
		"stw 0, 0x178(31)\t\n"
		"lwz 0, 0x14(1)\t\n"
		"mtlr 0\t\n"
		"lwz 31, 0xc(1)\t\n"
		"addi 1, 1, 0x10\t\n"
		"blr\t\n"
		"stwu 1, -0x18(1)\t\n"
		"mflr 0\t\n"
		"stmw 29, 0xc(1)\t\n"
		"stw 0, 0x1c(1)\t\n"
		"lis 29, lbl_800FC1C0@ha\t\n"
		"mr 30, 3\t\n"
		"lwz 0, lbl_800FC1C0@l(29)\t\n"
		"mr 31, 4\t\n"
		"cmpwi 0, 0\t\n"
		"bne lbl_80006AA0\t\n"
		"bl PADInit\t\n"
		"li 0, 1\t\n"
		"stw 0, -0x3e40(29)\t\n"
		"lbl_80006AA0:\t\n"
		"stw 31, 0(30)\t\n"
		"cmpwi 31, 1\t\n"
		"beq lbl_80006AD8\t\n"
		"bgt lbl_80006ABC\t\n"
		"cmpwi 31, 0\t\n"
		"beq lbl_80006AD0\t\n"
		"b lbl_80006AF0\t\n"
		"lbl_80006ABC:\t\n"
		"cmpwi 31, 2\t\n"
		"beq lbl_80006AE0\t\n"
		"cmpwi 31, 3\t\n"
		"beq lbl_80006AE8\t\n"
		"b lbl_80006AF0\t\n"
		"lbl_80006AD0:\t\n"
		"lis 0, 0x8000\t\n"
		"b lbl_80006AEC\t\n"
		"lbl_80006AD8:\t\n"
		"lis 0, 0x4000\t\n"
		"b lbl_80006AEC\t\n"
		"lbl_80006AE0:\t\n"
		"lis 0, 0x2000\t\n"
		"b lbl_80006AEC\t\n"
		"lbl_80006AE8:\t\n"
		"lis 0, 0x1000\t\n"
		"lbl_80006AEC:\t\n"
		"stw 0, 0x168(30)\t\n"
		"lbl_80006AF0:\t\n"
		"lwz 9, 0xe4(30)\t\n"
		"lwz 0, 0x34(9)\t\n"
		"lha 3, 0x30(9)\t\n"
		"mtlr 0\t\n"
		"add 3, 30, 3\t\n"
		"blrl\t\n"
		"lwz 9, 0xe4(30)\t\n"
		"lha 3, 0x18(9)\t\n"
		"lwz 0, 0x1c(9)\t\n"
		"add 3, 30, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"li 3, 1\t\n"
		"lwz 0, 0x1c(1)\t\n"
		"mtlr 0\t\n"
		"lmw 29, 0xc(1)\t\n"
		"addi 1, 1, 0x18\t\n"
		"blr\t\n"
		"stwu 1, -0x18(1)\t\n"
		"stmw 28, 8(1)\t\n"
		"li 8, 0x1e\t\n"
		"mr 12, 3\t\n"
		"mtctr 8\t\n"
		"li 10, 0\t\n"
		"li 0, -1\t\n"
		"addi 9, 12, 0xf0\t\n"
		"addi 11, 12, 4\t\n"
		"lbl_80006B5C:\t\n"
		"sth 10, 0(11)\t\n"
		"stw 0, -0xb0(9)\t\n"
		"addi 11, 11, 2\t\n"
		"stw 0, 0(9)\t\n"
		"addi 9, 9, 4\t\n"
		"bdnz lbl_80006B5C\t\n"
		"li 9, 0x100\t\n"
		"li 10, 0x200\t\n"
		"li 5, 0x1000\t\n"
		"li 4, 1\t\n"
		"li 3, 2\t\n"
		"li 30, 8\t\n"
		"li 29, 4\t\n"
		"li 28, 0x800\t\n"
		"li 11, 0x400\t\n"
		"li 8, 0\t\n"
		"li 7, 1\t\n"
		"li 6, 2\t\n"
		"li 0, 3\t\n"
		"sth 11, 0x1c(12)\t\n"
		"stw 0, 0x154(12)\t\n"
		"sth 28, 0x1e(12)\t\n"
		"sth 5, 0x22(12)\t\n"
		"sth 10, 0x28(12)\t\n"
		"sth 9, 0x2e(12)\t\n"
		"sth 4, 0x38(12)\t\n"
		"sth 3, 0x3a(12)\t\n"
		"sth 30, 0x3c(12)\t\n"
		"sth 29, 0x3e(12)\t\n"
		"stw 8, 0x148(12)\t\n"
		"stw 7, 0x14c(12)\t\n"
		"stw 6, 0x150(12)\t\n"
		"sth 5, 4(12)\t\n"
		"sth 9, 6(12)\t\n"
		"sth 10, 8(12)\t\n"
		"sth 4, 0xa(12)\t\n"
		"sth 3, 0xc(12)\t\n"
		"sth 30, 0xe(12)\t\n"
		"sth 29, 0x10(12)\t\n"
		"sth 9, 0x12(12)\t\n"
		"sth 28, 0x14(12)\t\n"
		"sth 9, 0x16(12)\t\n"
		"sth 10, 0x18(12)\t\n"
		"sth 9, 0x1a(12)\t\n"
		"sth 10, 0x20(12)\t\n"
		"sth 9, 0x24(12)\t\n"
		"sth 9, 0x26(12)\t\n"
		"sth 9, 0x2a(12)\t\n"
		"sth 9, 0x2c(12)\t\n"
		"lmw 28, 8(1)\t\n"
		"addi 1, 1, 0x18\t\n"
	);
}
#endif

#if 0
dontmangle void func_80006C2C() {

}
#else
dontmangle __ASM void func_80006C2C() {
	asm volatile(
		"stwu 1, -8(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0xc(1)\t\n"
		"lis 3, lbl_80246700@ha\t\n"
		"addi 3, 3, lbl_80246700@l\t\n"
		"bl PADRead\t\n"
		"li 0, 4\t\n"
		"lis 9, lbl_80246700@ha\t\n"
		"mtctr 0\t\n"
		"addi 9, 9, lbl_80246700@l\t\n"
		"lis 8, 0x8000\t\n"
		"li 3, 0\t\n"
		"addi 9, 9, 0xa\t\n"
		"li 10, 0\t\n"
		"lbl_80006C64:\t\n"
		"lbz 0, 0(9)\t\n"
		"srw 11, 8, 10\t\n"
		"addi 9, 9, 0xc\t\n"
		"extsb 0, 0\t\n"
		"cmpwi 0, -1\t\n"
		"bne lbl_80006C80\t\n"
		"or 3, 3, 11\t\n"
		"lbl_80006C80:\t\n"
		"addi 10, 10, 1\t\n"
		"bdnz lbl_80006C64\t\n"
		"cmpwi 3, 0\t\n"
		"beq lbl_80006C94\t\n"
		"bl PADReset\t\n"
		"lbl_80006C94:\t\n"
		"lis 3, lbl_80246700@ha\t\n"
		"addi 3, 3, lbl_80246700@l\t\n"
		"bl func_80098F2C\t\n"
		"lwz 0, 0xc(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 8\t\n"
	);
}
#endif

#if 0
dontmangle void func_80006CB0() {

}
#else
dontmangle __ASM void func_80006CB0() {
	asm volatile(
		"stwu 1, -0x10(1)\t\n"
		"mflr 0\t\n"
		"stw 31, 0xc(1)\t\n"
		"stw 0, 0x14(1)\t\n"
		"mr 31, 3\t\n"
		"lwz 9, 0xe4(31)\t\n"
		"lwz 0, 0x24(9)\t\n"
		"lha 3, 0x20(9)\t\n"
		"mtlr 0\t\n"
		"add 3, 31, 3\t\n"
		"blrl\t\n"
		"lwz 9, 0xe4(31)\t\n"
		"lwz 0, 0x2c(9)\t\n"
		"lha 3, 0x28(9)\t\n"
		"mtlr 0\t\n"
		"add 3, 31, 3\t\n"
		"blrl\t\n"
		"lwz 0, 0xd4(31)\t\n"
		"cmpwi 0, 0\t\n"
		"beq lbl_80006D08\t\n"
		"cmpwi 0, 8\t\n"
		"bne lbl_80006D24\t\n"
		"lbl_80006D08:\t\n"
		"lwz 9, 0xe4(31)\t\n"
		"lha 3, 0x30(9)\t\n"
		"lwz 0, 0x34(9)\t\n"
		"add 3, 31, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"b lbl_80006E64\t\n"
		"lbl_80006D24:\t\n"
		"lhz 0, 0xcc(31)\t\n"
		"lwz 9, 0xd0(31)\t\n"
		"sth 0, 0xce(31)\t\n"
		"cmpwi 9, 2\t\n"
		"bne lbl_80006DD4\t\n"
		"lwz 9, 0(31)\t\n"
		"li 0, 0\t\n"
		"sth 0, 0xcc(31)\t\n"
		"lis 11, lbl_80246700@ha\t\n"
		"mulli 9, 9, 0xc\t\n"
		"addi 11, 11, lbl_80246700@l\t\n"
		"lhzx 0, 11, 9\t\n"
		"add 9, 9, 11\t\n"
		"clrlwi 10, 0, 0x13\t\n"
		"sth 10, 0xcc(31)\t\n"
		"lbz 0, 6(9)\t\n"
		"cmplwi 0, 0x20\t\n"
		"ble lbl_80006D74\t\n"
		"ori 0, 10, 0x2000\t\n"
		"sth 0, 0xcc(31)\t\n"
		"lbl_80006D74:\t\n"
		"lwz 9, 0(31)\t\n"
		"mulli 9, 9, 0xc\t\n"
		"add 9, 9, 11\t\n"
		"lbz 0, 7(9)\t\n"
		"cmplwi 0, 0x20\t\n"
		"ble lbl_80006D98\t\n"
		"lhz 0, 0xcc(31)\t\n"
		"ori 0, 0, 0x4000\t\n"
		"sth 0, 0xcc(31)\t\n"
		"lbl_80006D98:\t\n"
		"lwz 9, 0(31)\t\n"
		"mulli 9, 9, 0xc\t\n"
		"add 9, 9, 11\t\n"
		"lbz 0, 6(9)\t\n"
		"stb 0, 0xe8(31)\t\n"
		"lbz 11, 7(9)\t\n"
		"stb 11, 0xe9(31)\t\n"
		"lbz 0, 2(9)\t\n"
		"stb 0, 0xea(31)\t\n"
		"lbz 11, 3(9)\t\n"
		"stb 11, 0xeb(31)\t\n"
		"lbz 0, 4(9)\t\n"
		"stb 0, 0xec(31)\t\n"
		"lbz 11, 5(9)\t\n"
		"stb 11, 0xed(31)\t\n"
		"lbl_80006DD4:\t\n"
		"lwz 0, 0xc4(31)\t\n"
		"cmpwi 0, 0\t\n"
		"bne lbl_80006DEC\t\n"
		"lwz 0, 0xc8(31)\t\n"
		"cmpwi 0, 0\t\n"
		"beq lbl_80006E4C\t\n"
		"lbl_80006DEC:\t\n"
		"lbz 0, 0xea(31)\t\n"
		"extsb 0, 0\t\n"
		"cmpwi 0, -42\t\n"
		"bge lbl_80006E08\t\n"
		"lhz 0, 0xcc(31)\t\n"
		"ori 0, 0, 1\t\n"
		"b lbl_80006E18\t\n"
		"lbl_80006E08:\t\n"
		"cmpwi 0, 0x2a\t\n"
		"ble lbl_80006E1C\t\n"
		"lhz 0, 0xcc(31)\t\n"
		"ori 0, 0, 2\t\n"
		"lbl_80006E18:\t\n"
		"sth 0, 0xcc(31)\t\n"
		"lbl_80006E1C:\t\n"
		"lbz 0, 0xeb(31)\t\n"
		"extsb 0, 0\t\n"
		"cmpwi 0, -42\t\n"
		"bge lbl_80006E38\t\n"
		"lhz 0, 0xcc(31)\t\n"
		"ori 0, 0, 4\t\n"
		"b lbl_80006E48\t\n"
		"lbl_80006E38:\t\n"
		"cmpwi 0, 0x2a\t\n"
		"ble lbl_80006E4C\t\n"
		"lhz 0, 0xcc(31)\t\n"
		"ori 0, 0, 8\t\n"
		"lbl_80006E48:\t\n"
		"sth 0, 0xcc(31)\t\n"
		"lbl_80006E4C:\t\n"
		"lwz 9, 0xe4(31)\t\n"
		"lha 3, 0x98(9)\t\n"
		"lwz 0, 0x9c(9)\t\n"
		"add 3, 31, 3\t\n"
		"mtlr 0\t\n"
		"blrl\t\n"
		"lbl_80006E64:\t\n"
		"lwz 0, 0x14(1)\t\n"
		"mtlr 0\t\n"
		"lwz 31, 0xc(1)\t\n"
		"addi 1, 1, 0x10\t\n"
		"blr\t\n"
		"lwz 11, 0(3)\t\n"
		"lis 9, lbl_80246700@ha\t\n"
		"addi 9, 9, lbl_80246700@l\t\n"
		"mulli 11, 11, 0xc\t\n"
		"add 11, 11, 9\t\n"
		"lbz 0, 0xa(11)\t\n"
		"extsb 0, 0\t\n"
		"cmpwi 0, -2\t\n"
		"beq lbl_80006ED4\t\n"
		"ble lbl_80006EBC\t\n"
		"cmpwi 0, -1\t\n"
		"beq lbl_80006EC4\t\n"
		"cmpwi 0, 0\t\n"
		"bne lbl_80006EC4\t\n"
		"li 0, 2\t\n"
		"stw 0, 0xd0(3)\t\n"
		"blr\t\n"
		"lbl_80006EBC:\t\n"
		"cmpwi 0, -3\t\n"
		"beq lbl_80006ED4\t\n"
		"lbl_80006EC4:\t\n"
		"li 0, 0\t\n"
		"stw 0, 0xd4(3)\t\n"
		"stw 0, 0xd0(3)\t\n"
		"blr\t\n"
		"lbl_80006ED4:\t\n"
		"li 0, 1\t\n"
		"stw 0, 0xd0(3)\t\n"
		"blr\t\n"
		"stwu 1, -0x10(1)\t\n"
		"mflr 0\t\n"
		"stmw 30, 8(1)\t\n"
		"stw 0, 0x14(1)\t\n"
		"mr 31, 3\t\n"
		"lwz 30, 0xd0(31)\t\n"
		"cmpwi 30, 1\t\n"
		"beq lbl_80006F4C\t\n"
		"bgt lbl_80006F10\t\n"
		"cmpwi 30, 0\t\n"
		"beq lbl_80006F28\t\n"
		"b lbl_80006F44\t\n"
		"lbl_80006F10:\t\n"
		"cmpwi 30, 2\t\n"
		"bne lbl_80006F44\t\n"
		"lwz 3, 0(31)\t\n"
		"bl func_800926E4\t\n"
		"andis. 0, 3, 0x900\t\n"
		"beq lbl_80006F30\t\n"
		"lbl_80006F28:\t\n"
		"stw 30, 0xd4(31)\t\n"
		"b lbl_80006F4C\t\n"
		"lbl_80006F30:\t\n"
		"andis. 0, 3, 0x8b10\t\n"
		"li 0, 4\t\n"
		"bne lbl_80006F48\t\n"
		"li 0, 8\t\n"
		"b lbl_80006F48\t\n"
		"lbl_80006F44:\t\n"
		"li 0, 0\t\n"
		"lbl_80006F48:\t\n"
		"stw 0, 0xd4(31)\t\n"
		"lbl_80006F4C:\t\n"
		"lwz 0, 0x14(1)\t\n"
		"mtlr 0\t\n"
		"lmw 30, 8(1)\t\n"
		"addi 1, 1, 0x10\t\n"
		"blr\t\n"
		"li 0, 0\t\n"
		"li 11, 0\t\n"
		"sth 0, 0xcc(3)\t\n"
		"addi 9, 3, 0xe9\t\n"
		"sth 0, 0xce(3)\t\n"
		"li 0, 1\t\n"
		"lbl_80006F78:\t\n"
		"stb 11, 0(9)\t\n"
		"addic. 0, 0, -1\t\n"
		"addi 9, 9, -1\t\n"
		"bge lbl_80006F78\t\n"
		"li 11, 4\t\n"
		"li 0, 0\t\n"
		"mtctr 11\t\n"
		"addi 9, 3, 0xed\t\n"
		"lbl_80006F98:\t\n"
		"stb 0, 0(9)\t\n"
		"addi 9, 9, -1\t\n"
		"bdnz lbl_80006F98\t\n"
		"li 0, 0\t\n"
		"stb 0, 0x17c(3)\t\n"
		"stw 0, 0x170(3)\t\n"
		"stw 0, 0x174(3)\t\n"
		"stw 0, 0x16c(3)\t\n"
		"stw 0, 0x178(3)\t\n"
		"blr\t\n"
		"cmpwi 4, 0x1d\t\n"
		"ble lbl_80006FD0\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"lbl_80006FD0:\t\n"
		"add 0, 4, 4\t\n"
		"addi 9, 3, 4\t\n"
		"lhzx 4, 9, 0\t\n"
		"lhz 11, 0xcc(3)\t\n"
		"and. 0, 11, 4\t\n"
		"beq lbl_80006FF8\t\n"
		"lhz 0, 0xce(3)\t\n"
		"li 3, 1\t\n"
		"andc. 9, 4, 0\t\n"
		".byte 0x4c,0x82,0x00,0x20\t\n"
		"lbl_80006FF8:\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"cmpwi 4, 0x1d\t\n"
		"ble lbl_80007010\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"lbl_80007010:\t\n"
		"add 0, 4, 4\t\n"
		"addi 9, 3, 4\t\n"
		"lhzx 4, 9, 0\t\n"
		"lhz 11, 0xcc(3)\t\n"
		"and. 0, 11, 4\t\n"
		"beq lbl_80007038\t\n"
		"lhz 0, 0xce(3)\t\n"
		"li 3, 1\t\n"
		"and. 9, 0, 4\t\n"
		".byte 0x4c,0x82,0x00,0x20\t\n"
		"lbl_80007038:\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"mr 10, 3\t\n"
		"cmpwi 4, 0x1d\t\n"
		"bgt lbl_80007070\t\n"
		"add 0, 4, 4\t\n"
		"addi 9, 10, 4\t\n"
		"lhzx 11, 9, 0\t\n"
		"li 3, 1\t\n"
		"lhz 0, 0xcc(10)\t\n"
		"and. 9, 0, 11\t\n"
		".byte 0x4c,0x82,0x00,0x20\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"lbl_80007070:\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"cmpwi 4, 0x1d\t\n"
		"ble lbl_80007088\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"lbl_80007088:\t\n"
		"add 0, 4, 4\t\n"
		"addi 9, 3, 4\t\n"
		"lhzx 4, 9, 0\t\n"
		"lhz 11, 0xcc(3)\t\n"
		"andc. 0, 4, 11\t\n"
		"beq lbl_800070B0\t\n"
		"lhz 0, 0xce(3)\t\n"
		"li 3, 1\t\n"
		"and. 9, 0, 4\t\n"
		".byte 0x4c,0x82,0x00,0x20\t\n"
		"lbl_800070B0:\t\n"
		"li 3, 0\t\n"
		"blr\t\n"
		"stwu 1, -0x10(1)\t\n"
		"cmpwi 4, 0x1d\t\n"
		"bgt lbl_800071AC\t\n"
		"slwi 4, 4, 2\t\n"
		"addi 9, 3, 0xf0\t\n"
		"lwzx 8, 9, 4\t\n"
		"cmpwi 8, -1\t\n"
		"beq lbl_8000719C\t\n"
		"lis 9, lbl_800EECDC@ha\t\n"
		"addi 3, 3, 0xea\t\n"
		"lfs 1, lbl_800EECDC@l(9)\t\n"
		"cmpwi 8, 0\t\n"
		"lis 9, 0x800f\t\n"
		"blt lbl_80007158\t\n"
		"cmpwi 8, 1\t\n"
		"bgt lbl_80007118\t\n"
		"lbzx 0, 3, 8\t\n"
		"lis 10, 0x4330\t\n"
		"lfd 13, -0x1320(9)\t\n"
		"extsb 0, 0\t\n"
		"lis 9, lbl_800EECE8@ha\t\n"
		"xoris 0, 0, 0x8000\t\n"
		"lfs 12, lbl_800EECE8@l(9)\t\n"
		"b lbl_8000713C\t\n"
		"lbl_80007118:\t\n"
		"cmpwi 8, 3\t\n"
		"bgt lbl_80007158\t\n"
		"lbzx 0, 3, 8\t\n"
		"lis 10, 0x4330\t\n"
		"lfd 13, -0x1320(9)\t\n"
		"extsb 0, 0\t\n"
		"lis 9, lbl_800EECEC@ha\t\n"
		"xoris 0, 0, 0x8000\t\n"
		"lfs 12, lbl_800EECEC@l(9)\t\n"
		"lbl_8000713C:\t\n"
		"stw 0, 0xc(1)\t\n"
		"stw 10, 8(1)\t\n"
		"lfd 0, 8(1)\t\n"
		"fsub 0, 0, 13\t\n"
		"frsp 0, 0\t\n"
		"fabs 0, 0\t\n"
		"fdivs 1, 0, 12\t\n"
		"lbl_80007158:\t\n"
		"lbzx 0, 3, 8\t\n"
		"lis 10, 0x4330\t\n"
		"lis 9, lbl_800EECE0@ha\t\n"
		"extsb 0, 0\t\n"
		"lfd 13, lbl_800EECE0@l(9)\t\n"
		"xoris 0, 0, 0x8000\t\n"
		"lis 9, lbl_800EECDC@ha\t\n"
		"stw 0, 0xc(1)\t\n"
		"lfs 12, lbl_800EECDC@l(9)\t\n"
		"stw 10, 8(1)\t\n"
		"lfd 0, 8(1)\t\n"
		"fsub 0, 0, 13\t\n"
		"frsp 0, 0\t\n"
		"fcmpu 0, 0, 12\t\n"
		"bgt lbl_800071F0\t\n"
		"fneg 1, 1\t\n"
		"b lbl_800071F0\t\n"
		"lbl_8000719C:\t\n"
		"addi 9, 3, 0x40\t\n"
		"lwzx 4, 9, 4\t\n"
		"cmpwi 4, -1\t\n"
		"bne lbl_800071B8\t\n"
		"lbl_800071AC:\t\n"
		"lis 9, lbl_800EECDC@ha\t\n"
		"lfs 1, lbl_800EECDC@l(9)\t\n"
		"b lbl_800071F0\t\n"
		"lbl_800071B8:\t\n"
		"addi 9, 3, 0xe8\t\n"
		"lbzx 0, 9, 4\t\n"
		"lis 8, 0x4330\t\n"
		"lis 9, lbl_800EECE0@ha\t\n"
		"lis 10, lbl_800EECF0@ha\t\n"
		"xoris 0, 0, 0x8000\t\n"
		"lfd 0, lbl_800EECE0@l(9)\t\n"
		"stw 0, 0xc(1)\t\n"
		"lfs 13, lbl_800EECF0@l(10)\t\n"
		"stw 8, 8(1)\t\n"
		"lfd 1, 8(1)\t\n"
		"fsub 1, 1, 0\t\n"
		"frsp 1, 1\t\n"
		"fdivs 1, 1, 13\t\n"
		"lbl_800071F0:\t\n"
		"addi 1, 1, 0x10\t\n"
		"blr\t\n"
		"lwz 0, 0xbc(3)\t\n"
		"cmpwi 0, 0\t\n"
		"beq lbl_80007214\t\n"
		"cmpwi 4, 0\t\n"
		"bne lbl_80007214\t\n"
		"li 0, 2\t\n"
		"stw 0, 0x174(3)\t\n"
		"lbl_80007214:\t\n"
		"stw 4, 0xbc(3)\t\n"
		"blr\t\n"
		"stw 4, 0x178(3)\t\n"
		"blr\t\n"
		"lwz 0, 0x178(3)\t\n"
		"xori 0, 0, 1\t\n"
		"stw 0, 0x178(3)\t\n"
		"blr\t\n"
		"stb 4, 0x17c(3)\t\n"
		"blr\t\n"
		"stwu 1, -0x20(1)\t\n"
		"mflr 0\t\n"
		"stw 31, 0x1c(1)\t\n"
		"stw 0, 0x24(1)\t\n"
		"mr 31, 3\t\n"
		"lwz 0, 0xbc(31)\t\n"
		"cmpwi 0, 0\t\n"
		"beq lbl_80007400\t\n"
		"lbz 9, 0x17c(31)\t\n"
		"li 0, 0\t\n"
		"stw 0, 0x174(31)\t\n"
		"cmpwi 9, 0\t\n"
		"beq lbl_8000730C\t\n"
		"xoris 0, 9, 0x8000\t\n"
		"lis 11, 0x4330\t\n"
		"lis 10, lbl_800EECF8@ha\t\n"
		"stw 0, 0x14(1)\t\n"
		"lis 8, lbl_800EED00@ha\t\n"
		"lfd 13, lbl_800EECF8@l(10)\t\n"
		"lis 7, lbl_800EECF4@ha\t\n"
		"stw 11, 0x10(1)\t\n"
		"lis 10, lbl_800EED08@ha\t\n"
		"lfs 12, lbl_800EED00@l(8)\t\n"
		"lis 11, lbl_800EED04@ha\t\n"
		"lfd 0, 0x10(1)\t\n"
		"lfs 11, lbl_800EECF4@l(7)\t\n"
		"fsub 0, 0, 13\t\n"
		"lfd 10, lbl_800EED08@l(10)\t\n"
		"frsp 0, 0\t\n"
		"lfs 13, lbl_800EED04@l(11)\t\n"
		"fsubs 0, 12, 0\t\n"
		"fdivs 0, 0, 12\t\n"
		"fmadds 0, 0, 11, 13\t\n"
		"fmr 13, 0\t\n"
		"fcmpu 0, 13, 10\t\n"
		"cror 3, 2, 1\t\n"
		"bso lbl_800072E0\t\n"
		"fctiwz 0, 13\t\n"
		"stfd 0, 0x10(1)\t\n"
		"lwz 9, 0x14(1)\t\n"
		"b lbl_800072F4\t\n"
		"lbl_800072E0:\t\n"
		"fsub 0, 13, 10\t\n"
		"fctiwz 13, 0\t\n"
		"stfd 13, 0x10(1)\t\n"
		"lwz 9, 0x14(1)\t\n"
		"xoris 9, 9, 0x8000\t\n"
		"lbl_800072F4:\t\n"
		"lwz 0, 0x16c(31)\t\n"
		"cmplw 0, 9\t\n"
		"li 0, 0\t\n"
		"blt lbl_80007308\t\n"
		"li 0, 1\t\n"
		"lbl_80007308:\t\n"
		"stw 0, 0x174(31)\t\n"
		"lbl_8000730C:\t\n"
		"lwz 0, 0x178(31)\t\n"
		"cmpwi 0, 0\t\n"
		"beq lbl_8000733C\t\n"
		"lwz 0, 0x16c(31)\t\n"
		"cmplwi 0, 1\t\n"
		"li 0, 1\t\n"
		"bgt lbl_80007338\t\n"
		"lwz 0, 0x174(31)\t\n"
		"cmpwi 0, 1\t\n"
		"beq lbl_8000733C\t\n"
		"li 0, 0\t\n"
		"lbl_80007338:\t\n"
		"stw 0, 0x174(31)\t\n"
		"lbl_8000733C:\t\n"
		"lis 9, u8FramesPerSecond@ha\t\n"
		"lbz 11, 0x17c(31)\t\n"
		"lwz 0, u8FramesPerSecond@l(9)\t\n"
		"cmpwi 11, 0\t\n"
		"slwi 10, 0, 3\t\n"
		"slwi 9, 0, 2\t\n"
		"add 8, 9, 0\t\n"
		"subf 10, 0, 10\t\n"
		"bne lbl_8000736C\t\n"
		"lwz 0, 0x178(31)\t\n"
		"cmpwi 0, 0\t\n"
		"beq lbl_800073B0\t\n"
		"lbl_8000736C:\t\n"
		"lwz 9, 0xdc(31)\t\n"
		"cmpw 9, 10\t\n"
		"bgt lbl_8000738C\t\n"
		"addi 0, 9, 1\t\n"
		"li 9, 0\t\n"
		"stw 0, 0xdc(31)\t\n"
		"stw 9, 0xe0(31)\t\n"
		"b lbl_800073B0\t\n"
		"lbl_8000738C:\t\n"
		"lwz 0, 0xe0(31)\t\n"
		"cmpw 0, 8\t\n"
		"bgt lbl_800073B0\t\n"
		"li 0, 0\t\n"
		"li 9, 0\t\n"
		"li 11, 2\t\n"
		"stb 0, 0x17c(31)\t\n"
		"stw 9, 0x178(31)\t\n"
		"stw 11, 0x174(31)\t\n"
		"lbl_800073B0:\t\n"
		"lwz 0, 0xdc(31)\t\n"
		"cmpw 0, 10\t\n"
		"ble lbl_800073C8\t\n"
		"lwz 9, 0xe0(31)\t\n"
		"addi 9, 9, 1\t\n"
		"stw 9, 0xe0(31)\t\n"
		"lbl_800073C8:\t\n"
		"lbz 0, 0x17c(31)\t\n"
		"cmpwi 0, 0\t\n"
		"bne lbl_80007408\t\n"
		"lwz 9, 0x178(31)\t\n"
		"cmpwi 9, 0\t\n"
		"bne lbl_80007408\t\n"
		"lwz 0, 0xdc(31)\t\n"
		"cmpw 0, 10\t\n"
		"ble lbl_800073F8\t\n"
		"lwz 0, 0xe0(31)\t\n"
		"cmpw 0, 8\t\n"
		"ble lbl_80007408\t\n"
		"lbl_800073F8:\t\n"
		"stw 9, 0xdc(31)\t\n"
		"b lbl_80007408\t\n"
		"lbl_80007400:\t\n"
		"li 0, 2\t\n"
		"stw 0, 0x174(31)\t\n"
		"lbl_80007408:\t\n"
		"lwz 0, 0x174(31)\t\n"
		"cmpwi 0, 1\t\n"
		"beq lbl_80007428\t\n"
		"cmplwi 0, 1\t\n"
		"blt lbl_80007474\t\n"
		"cmpwi 0, 2\t\n"
		"beq lbl_8000744C\t\n"
		"b lbl_80007480\t\n"
		"lbl_80007428:\t\n"
		"lwz 0, 0x170(31)\t\n"
		"cmpwi 0, 1\t\n"
		"beq lbl_80007440\t\n"
		"lwz 3, 0(31)\t\n"
		"li 4, 1\t\n"
		"bl PADControlMotor\t\n"
		"lbl_80007440:\t\n"
		"li 0, 0\t\n"
		"stw 0, 0x16c(31)\t\n"
		"b lbl_80007480\t\n"
		"lbl_8000744C:\t\n"
		"lwz 0, 0x170(31)\t\n"
		"cmpwi 0, 2\t\n"
		"beq lbl_80007468\t\n"
		"lwz 3, 0(31)\t\n"
		"li 4, 2\t\n"
		"bl PADControlMotor\t\n"
		"b lbl_80007480\t\n"
		"lbl_80007468:\t\n"
		"li 0, 0\t\n"
		"stw 0, 0x174(31)\t\n"
		"b lbl_80007480\t\n"
		"lbl_80007474:\t\n"
		"lwz 3, 0(31)\t\n"
		"li 4, 0\t\n"
		"bl PADControlMotor\t\n"
		"lbl_80007480:\t\n"
		"lwz 9, 0x16c(31)\t\n"
		"lwz 0, 0x174(31)\t\n"
		"addi 9, 9, 1\t\n"
		"stw 9, 0x16c(31)\t\n"
		"stw 0, 0x170(31)\t\n"
		"lwz 0, 0x24(1)\t\n"
		"mtlr 0\t\n"
		"lwz 31, 0x1c(1)\t\n"
		"addi 1, 1, 0x20\t\n"
	);
}
#endif

#if 0
dontmangle void func_800074A8() {

}
#else
dontmangle __ASM void func_800074A8() {
	asm volatile(
		"stwu 1, -0x18(1)\t\n"
		"mflr 0\t\n"
		"stw 0, 0x1c(1)\t\n"
		"lis 9, lbl_800EED10@ha\t\n"
		"addi 11, 1, 8\t\n"
		"lwz 8, lbl_800EED10@l(9)\t\n"
		"mr 3, 11\t\n"
		"addi 9, 9, -4848\t\n"
		"lwz 7, 0xc(9)\t\n"
		"lwz 0, 4(9)\t\n"
		"lwz 10, 8(9)\t\n"
		"stw 8, 8(1)\t\n"
		"stw 0, 4(11)\t\n"
		"stw 10, 8(11)\t\n"
		"stw 7, 0xc(11)\t\n"
		"bl func_80099F24\t\n"
		"lis 3, 0xf000\t\n"
		"bl func_800999C0\t\n"
		"lwz 0, 0x1c(1)\t\n"
		"mtlr 0\t\n"
		"addi 1, 1, 0x18\t\n"
	);
}
#endif

